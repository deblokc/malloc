###########INSIDE MALLOC##########
Wanted size : 472
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
Did not find any available page, adding one
Size of t_chunk : 16
t_page	*add_page(size_t size);
Allocating : 106496  |  0x1a000
Allocated from 0x7f1fecac9000
To             0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fecac9018 => 0x7f1fecac9020

Chunk size : 496 | 0x1f0 | 0b111110000
Chunk head       0x7f1fecac9020
Return data from 0x7f1fecac9030
To               0x7f1fecac9210
************
496
0x7f1fecac9030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 120
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 28672  |  0x7000
Allocated from 0x7f1fed577000
To             0x7f1fed57e000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed577018 => 0x7f1fed577020

Chunk size : 144 | 0x90 | 0b10010000
Chunk head       0x7f1fed577020
Return data from 0x7f1fed577030
To               0x7f1fed5770b0
************
144
0x7f1fed577030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1024
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fed5be000
To             0x7f1fed5bf000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed5be018 => 0x7f1fed5be020

Chunk size : 1040 | 0x410 | 0b10000010000
Chunk head       0x7f1fed5be020
Return data from 0x7f1fed5be030
To               0x7f1fed5be430
************
1040
0x7f1fed5be030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed577030
pointer's head
0x7f1fed577020
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5be030
pointer's head
0x7f1fed5be020
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecac9030
pointer's head
0x7f1fecac9020
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 14528
Page size corresponding : 16384 | 0x4000
Did not find any available page, adding one
Size of t_chunk : 16
t_page	*add_page(size_t size);
Allocating : 16384  |  0x4000
Allocated from 0x7f1fed57a000
To             0x7f1fed57e000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed57a018 => 0x7f1fed57a020

Chunk size : 14544 | 0x38d0 | 0b11100011010000
Chunk head       0x7f1fed57a020
Return data from 0x7f1fed57a030
To               0x7f1fed57d8f0
************
14544
0x7f1fed57a030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
No ptr, just allocating
###########INSIDE MALLOC##########
Wanted size : 2800
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fed5be000
To             0x7f1fed5bf000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed5be018 => 0x7f1fed5be020

Chunk size : 2816 | 0xb00 | 0b101100000000
Chunk head       0x7f1fed5be020
Return data from 0x7f1fed5be030
To               0x7f1fed5beb20
************
2816
0x7f1fed5be030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1024
Page size corresponding : 4096 | 0x1000
page : 0x7f1fed5be000 - 0x7f1fed5bf000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5be020 - 2816 | 0xb00
Found the end of chunk, chunk will be 0x7f1fed5beb20 - 0x7f1fed5bef30
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 1040 | 0x410 | 0b10000010000
Chunk head       0x7f1fed5beb20
Return data from 0x7f1fed5beb30
To               0x7f1fed5bef30
************
1040
0x7f1fed5beb30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed578000
To             0x7f1fed57a000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed578018 => 0x7f1fed578020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fed578020
Return data from 0x7f1fed578030
To               0x7f1fed579030
************
4112
0x7f1fed578030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5beb30
pointer's head
0x7f1fed5beb20
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed576000
To             0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed576018 => 0x7f1fed576020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fed576020
Return data from 0x7f1fed576030
To               0x7f1fed577030
************
4112
0x7f1fed576030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed578030
pointer's head
0x7f1fed578020
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed578000
To             0x7f1fed57a000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed578018 => 0x7f1fed578020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fed578020
Return data from 0x7f1fed578030
To               0x7f1fed579030
************
4112
0x7f1fed578030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed576030
pointer's head
0x7f1fed576020
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed576000
To             0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed576018 => 0x7f1fed576020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fed576020
Return data from 0x7f1fed576030
To               0x7f1fed577030
************
4112
0x7f1fed576030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed578030
pointer's head
0x7f1fed578020
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed578000
To             0x7f1fed57a000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed578018 => 0x7f1fed578020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fed578020
Return data from 0x7f1fed578030
To               0x7f1fed579030
************
4112
0x7f1fed578030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed576030
pointer's head
0x7f1fed576020
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed576000
To             0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed576018 => 0x7f1fed576020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fed576020
Return data from 0x7f1fed576030
To               0x7f1fed577030
************
4112
0x7f1fed576030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed578030
pointer's head
0x7f1fed578020
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed578000
To             0x7f1fed57a000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed578018 => 0x7f1fed578020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fed578020
Return data from 0x7f1fed578030
To               0x7f1fed579030
************
4112
0x7f1fed578030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed576030
pointer's head
0x7f1fed576020
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed576000
To             0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed576018 => 0x7f1fed576020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fed576020
Return data from 0x7f1fed576030
To               0x7f1fed577030
************
4112
0x7f1fed576030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed578030
pointer's head
0x7f1fed578020
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed578000
To             0x7f1fed57a000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed578018 => 0x7f1fed578020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fed578020
Return data from 0x7f1fed578030
To               0x7f1fed579030
************
4112
0x7f1fed578030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed576030
pointer's head
0x7f1fed576020
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 352
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 106496  |  0x1a000
Allocated from 0x7f1fecac9000
To             0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fecac9018 => 0x7f1fecac9020

Chunk size : 368 | 0x170 | 0b101110000
Chunk head       0x7f1fecac9020
Return data from 0x7f1fecac9030
To               0x7f1fecac9190
************
368
0x7f1fecac9030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE CALLOC##########
###########INSIDE MALLOC##########
Wanted size : 96
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 28672  |  0x7000
Allocated from 0x7f1fed571000
To             0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed571018 => 0x7f1fed571020

Chunk size : 112 | 0x70 | 0b1110000
Chunk head       0x7f1fed571020
Return data from 0x7f1fed571030
To               0x7f1fed571090
************
112
0x7f1fed571030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 352
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecac9020 - 368 | 0x170
Found the end of chunk, chunk will be 0x7f1fecac9190 - 0x7f1fecac9300
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 368 | 0x170 | 0b101110000
Chunk head       0x7f1fecac9190
Return data from 0x7f1fecac91a0
To               0x7f1fecac9300
************
368
0x7f1fecac91a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 352
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecac9190 - 368 | 0x170
Found the end of chunk, chunk will be 0x7f1fecac9300 - 0x7f1fecac9470
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 368 | 0x170 | 0b101110000
Chunk head       0x7f1fecac9300
Return data from 0x7f1fecac9310
To               0x7f1fecac9470
************
368
0x7f1fecac9310
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 2
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571020 - 112 | 0x70
Found the end of chunk, chunk will be 0x7f1fed571090 - 0x7f1fed5710b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571090
Return data from 0x7f1fed5710a0
To               0x7f1fed5710b0
************
32
0x7f1fed5710a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1025
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fed570000
To             0x7f1fed571000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed570018 => 0x7f1fed570020

Chunk size : 1056 | 0x420 | 0b10000100000
Chunk head       0x7f1fed570020
Return data from 0x7f1fed570030
To               0x7f1fed570440
************
1056
0x7f1fed570030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed56e000
To             0x7f1fed570000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed56e018 => 0x7f1fed56e020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fed56e020
Return data from 0x7f1fed56e030
To               0x7f1fed56f030
************
4112
0x7f1fed56e030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571090 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5710b0 - 0x7f1fed5710d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5710b0
Return data from 0x7f1fed5710c0
To               0x7f1fed5710d0
************
32
0x7f1fed5710c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5710c0
pointer's head
0x7f1fed5710b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 120
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5710b0 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed5710d0 - 0x7f1fed571160
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 144 | 0x90 | 0b10010000
Chunk head       0x7f1fed5710d0
Return data from 0x7f1fed5710e0
To               0x7f1fed571160
************
144
0x7f1fed5710e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5710b0 - 0x7f1fed5710d0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5710b0
Return data from 0x7f1fed5710c0
To               0x7f1fed5710d0
************
32
0x7f1fed5710c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 776
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecac9300 - 368 | 0x170
Found the end of chunk, chunk will be 0x7f1fecac9470 - 0x7f1fecac9790
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 800 | 0x320 | 0b1100100000
Chunk head       0x7f1fecac9470
Return data from 0x7f1fecac9480
To               0x7f1fecac9790
************
800
0x7f1fecac9480
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 112
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5710d0 - 144 | 0x90
Found the end of chunk, chunk will be 0x7f1fed571160 - 0x7f1fed5711e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 128 | 0x80 | 0b10000000
Chunk head       0x7f1fed571160
Return data from 0x7f1fed571170
To               0x7f1fed5711e0
************
128
0x7f1fed571170
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1336
Page size corresponding : 4096 | 0x1000
page : 0x7f1fed570000 - 0x7f1fed571000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed570020 - 1056 | 0x420
Found the end of chunk, chunk will be 0x7f1fed570440 - 0x7f1fed570990
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 1360 | 0x550 | 0b10101010000
Chunk head       0x7f1fed570440
Return data from 0x7f1fed570450
To               0x7f1fed570990
************
1360
0x7f1fed570450
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 216
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecac9470 - 800 | 0x320
Found the end of chunk, chunk will be 0x7f1fecac9790 - 0x7f1fecac9880
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 240 | 0xf0 | 0b11110000
Chunk head       0x7f1fecac9790
Return data from 0x7f1fecac97a0
To               0x7f1fecac9880
************
240
0x7f1fecac97a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 432
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecac9790 - 240 | 0xf0
Found the end of chunk, chunk will be 0x7f1fecac9880 - 0x7f1fecac9a40
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 448 | 0x1c0 | 0b111000000
Chunk head       0x7f1fecac9880
Return data from 0x7f1fecac9890
To               0x7f1fecac9a40
************
448
0x7f1fecac9890
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 104
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571160 - 128 | 0x80
Found the end of chunk, chunk will be 0x7f1fed5711e0 - 0x7f1fed571260
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 128 | 0x80 | 0b10000000
Chunk head       0x7f1fed5711e0
Return data from 0x7f1fed5711f0
To               0x7f1fed571260
************
128
0x7f1fed5711f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 88
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5711e0 - 128 | 0x80
Found the end of chunk, chunk will be 0x7f1fed571260 - 0x7f1fed5712d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 112 | 0x70 | 0b1110000
Chunk head       0x7f1fed571260
Return data from 0x7f1fed571270
To               0x7f1fed5712d0
************
112
0x7f1fed571270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 120
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571260 - 112 | 0x70
Found the end of chunk, chunk will be 0x7f1fed5712d0 - 0x7f1fed571360
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 144 | 0x90 | 0b10010000
Chunk head       0x7f1fed5712d0
Return data from 0x7f1fed5712e0
To               0x7f1fed571360
************
144
0x7f1fed5712e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 168
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5712d0 - 144 | 0x90
Found the end of chunk, chunk will be 0x7f1fed571360 - 0x7f1fed571420
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 192 | 0xc0 | 0b11000000
Chunk head       0x7f1fed571360
Return data from 0x7f1fed571370
To               0x7f1fed571420
************
192
0x7f1fed571370
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 104
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571360 - 192 | 0xc0
Found the end of chunk, chunk will be 0x7f1fed571420 - 0x7f1fed5714a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 128 | 0x80 | 0b10000000
Chunk head       0x7f1fed571420
Return data from 0x7f1fed571430
To               0x7f1fed5714a0
************
128
0x7f1fed571430
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 80
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571420 - 128 | 0x80
Found the end of chunk, chunk will be 0x7f1fed5714a0 - 0x7f1fed571500
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 96 | 0x60 | 0b1100000
Chunk head       0x7f1fed5714a0
Return data from 0x7f1fed5714b0
To               0x7f1fed571500
************
96
0x7f1fed5714b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 192
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5714a0 - 96 | 0x60
Found the end of chunk, chunk will be 0x7f1fed571500 - 0x7f1fed5715d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 208 | 0xd0 | 0b11010000
Chunk head       0x7f1fed571500
Return data from 0x7f1fed571510
To               0x7f1fed5715d0
************
208
0x7f1fed571510
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571500 - 208 | 0xd0
Found the end of chunk, chunk will be 0x7f1fed5715d0 - 0x7f1fed5715f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5715d0
Return data from 0x7f1fed5715e0
To               0x7f1fed5715f0
************
32
0x7f1fed5715e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5715d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5715f0 - 0x7f1fed571610
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5715f0
Return data from 0x7f1fed571600
To               0x7f1fed571610
************
32
0x7f1fed571600
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5715f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571610 - 0x7f1fed571630
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571610
Return data from 0x7f1fed571620
To               0x7f1fed571630
************
32
0x7f1fed571620
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571610 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571630 - 0x7f1fed571650
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571630
Return data from 0x7f1fed571640
To               0x7f1fed571650
************
32
0x7f1fed571640
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571630 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571650 - 0x7f1fed571670
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571650
Return data from 0x7f1fed571660
To               0x7f1fed571670
************
32
0x7f1fed571660
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571650 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571670 - 0x7f1fed571690
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571670
Return data from 0x7f1fed571680
To               0x7f1fed571690
************
32
0x7f1fed571680
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571670 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571690 - 0x7f1fed5716b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571690
Return data from 0x7f1fed5716a0
To               0x7f1fed5716b0
************
32
0x7f1fed5716a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571690 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5716b0 - 0x7f1fed5716d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5716b0
Return data from 0x7f1fed5716c0
To               0x7f1fed5716d0
************
32
0x7f1fed5716c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5716b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5716d0 - 0x7f1fed5716f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5716d0
Return data from 0x7f1fed5716e0
To               0x7f1fed5716f0
************
32
0x7f1fed5716e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5716d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5716f0 - 0x7f1fed571710
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5716f0
Return data from 0x7f1fed571700
To               0x7f1fed571710
************
32
0x7f1fed571700
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5716f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571710 - 0x7f1fed571730
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571710
Return data from 0x7f1fed571720
To               0x7f1fed571730
************
32
0x7f1fed571720
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571710 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571730 - 0x7f1fed571750
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571730
Return data from 0x7f1fed571740
To               0x7f1fed571750
************
32
0x7f1fed571740
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571730 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571750 - 0x7f1fed571770
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571750
Return data from 0x7f1fed571760
To               0x7f1fed571770
************
32
0x7f1fed571760
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 271
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecac9880 - 448 | 0x1c0
Found the end of chunk, chunk will be 0x7f1fecac9a40 - 0x7f1fecac9b60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 288 | 0x120 | 0b100100000
Chunk head       0x7f1fecac9a40
Return data from 0x7f1fecac9a50
To               0x7f1fecac9b60
************
288
0x7f1fecac9a50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed571720
pointer's head
0x7f1fed571710
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed571760
pointer's head
0x7f1fed571750
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 22
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571750 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed571770 - 0x7f1fed5717a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed571770
Return data from 0x7f1fed571780
To               0x7f1fed5717a0
************
48
0x7f1fed571780
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
No ptr, just allocating
###########INSIDE MALLOC##########
Wanted size : 544
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecac9a40 - 288 | 0x120
Found the end of chunk, chunk will be 0x7f1fecac9b60 - 0x7f1fecac9d90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 560 | 0x230 | 0b1000110000
Chunk head       0x7f1fecac9b60
Return data from 0x7f1fecac9b70
To               0x7f1fecac9d90
************
560
0x7f1fecac9b70
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 32
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571770 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed5717a0 - 0x7f1fed5717d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5717a0
Return data from 0x7f1fed5717b0
To               0x7f1fed5717d0
************
48
0x7f1fed5717b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 24
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5717a0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed5717d0 - 0x7f1fed571800
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5717d0
Return data from 0x7f1fed5717e0
To               0x7f1fed571800
************
48
0x7f1fed5717e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 26
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5717d0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed571800 - 0x7f1fed571830
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed571800
Return data from 0x7f1fed571810
To               0x7f1fed571830
************
48
0x7f1fed571810
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 28
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571800 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed571830 - 0x7f1fed571860
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed571830
Return data from 0x7f1fed571840
To               0x7f1fed571860
************
48
0x7f1fed571840
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 26
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571830 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed571860 - 0x7f1fed571890
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed571860
Return data from 0x7f1fed571870
To               0x7f1fed571890
************
48
0x7f1fed571870
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed571810
pointer's head
0x7f1fed571800
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed571780
pointer's head
0x7f1fed571770
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed571710 - 0x7f1fed571730
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed571710
Return data from 0x7f1fed571720
To               0x7f1fed571730
************
32
0x7f1fed571720
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8912
Page size corresponding : 12288 | 0x3000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 12288  |  0x3000
Allocated from 0x7f1fed56b000
To             0x7f1fed56e000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed56b018 => 0x7f1fed56b020

Chunk size : 8928 | 0x22e0 | 0b10001011100000
Chunk head       0x7f1fed56b020
Return data from 0x7f1fed56b030
To               0x7f1fed56d300
************
8928
0x7f1fed56b030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 576
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecac9b60 - 560 | 0x230
Found the end of chunk, chunk will be 0x7f1fecac9d90 - 0x7f1fecac9fe0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 592 | 0x250 | 0b1001010000
Chunk head       0x7f1fecac9d90
Return data from 0x7f1fecac9da0
To               0x7f1fecac9fe0
************
592
0x7f1fecac9da0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 352
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecac9d90 - 592 | 0x250
Found the end of chunk, chunk will be 0x7f1fecac9fe0 - 0x7f1fecaca150
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 368 | 0x170 | 0b101110000
Chunk head       0x7f1fecac9fe0
Return data from 0x7f1fecac9ff0
To               0x7f1fecaca150
************
368
0x7f1fecac9ff0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9328
Page size corresponding : 12288 | 0x3000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 12288  |  0x3000
Allocated from 0x7f1fed568000
To             0x7f1fed56b000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed568018 => 0x7f1fed568020

Chunk size : 9344 | 0x2480 | 0b10010010000000
Chunk head       0x7f1fed568020
Return data from 0x7f1fed568030
To               0x7f1fed56a4a0
************
9344
0x7f1fed568030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 352
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecac9fe0 - 368 | 0x170
Found the end of chunk, chunk will be 0x7f1fecaca150 - 0x7f1fecaca2c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 368 | 0x170 | 0b101110000
Chunk head       0x7f1fecaca150
Return data from 0x7f1fecaca160
To               0x7f1fecaca2c0
************
368
0x7f1fecaca160
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1464
Page size corresponding : 4096 | 0x1000
page : 0x7f1fed570000 - 0x7f1fed571000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed570440 - 1360 | 0x550
Found the end of chunk, chunk will be 0x7f1fed570990 - 0x7f1fed570f60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 1488 | 0x5d0 | 0b10111010000
Chunk head       0x7f1fed570990
Return data from 0x7f1fed5709a0
To               0x7f1fed570f60
************
1488
0x7f1fed5709a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 64
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571860 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed571890 - 0x7f1fed5718e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 80 | 0x50 | 0b1010000
Chunk head       0x7f1fed571890
Return data from 0x7f1fed5718a0
To               0x7f1fed5718e0
************
80
0x7f1fed5718a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 232
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecaca150 - 368 | 0x170
Found the end of chunk, chunk will be 0x7f1fecaca2c0 - 0x7f1fecaca3c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 256 | 0x100 | 0b100000000
Chunk head       0x7f1fecaca2c0
Return data from 0x7f1fecaca2d0
To               0x7f1fecaca3c0
************
256
0x7f1fecaca2d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 352
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecaca2c0 - 256 | 0x100
Found the end of chunk, chunk will be 0x7f1fecaca3c0 - 0x7f1fecaca530
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 368 | 0x170 | 0b101110000
Chunk head       0x7f1fecaca3c0
Return data from 0x7f1fecaca3d0
To               0x7f1fecaca530
************
368
0x7f1fecaca3d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 22
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed571770 - 0x7f1fed5717a0
Wanted size : 22 | 0x16
Got size    : 48 | 0x30
Chunk head       0x7f1fed571770
Return data from 0x7f1fed571780
To               0x7f1fed5717a0
************
48
0x7f1fed571780
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed571750 - 0x7f1fed571770
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed571750
Return data from 0x7f1fed571760
To               0x7f1fed571770
************
32
0x7f1fed571760
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed571800 - 0x7f1fed571830
Wanted size : 7 | 0x7
Got size    : 48 | 0x30
Chunk head       0x7f1fed571800
Return data from 0x7f1fed571810
To               0x7f1fed571830
************
48
0x7f1fed571810
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
No ptr, just allocating
###########INSIDE MALLOC##########
Wanted size : 100
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571890 - 80 | 0x50
Found the end of chunk, chunk will be 0x7f1fed5718e0 - 0x7f1fed571960
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 128 | 0x80 | 0b10000000
Chunk head       0x7f1fed5718e0
Return data from 0x7f1fed5718f0
To               0x7f1fed571960
************
128
0x7f1fed5718f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed571810
pointer's head
0x7f1fed571800
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed571800 - 0x7f1fed571830
Wanted size : 7 | 0x7
Got size    : 48 | 0x30
Chunk head       0x7f1fed571800
Return data from 0x7f1fed571810
To               0x7f1fed571830
************
48
0x7f1fed571810
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5718f0
pointer's head
0x7f1fed5718e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 121
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5718e0 - 129 | 0x81
Found the end of chunk, chunk will be 0x7f1fed571960 - 0x7f1fed5719f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 144 | 0x90 | 0b10010000
Chunk head       0x7f1fed571960
Return data from 0x7f1fed571970
To               0x7f1fed5719f0
************
144
0x7f1fed571970
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5718e0 - 0x7f1fed571960
Wanted size : 4 | 0x4
Got size    : 128 | 0x80
Chunk head       0x7f1fed5718e0
Return data from 0x7f1fed5718f0
To               0x7f1fed571960
************
128
0x7f1fed5718f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571960 - 144 | 0x90
Found the end of chunk, chunk will be 0x7f1fed5719f0 - 0x7f1fed571a10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5719f0
Return data from 0x7f1fed571a00
To               0x7f1fed571a10
************
32
0x7f1fed571a00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5718f0
pointer's head
0x7f1fed5718e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5718e0 - 0x7f1fed571960
Wanted size : 1 | 0x1
Got size    : 128 | 0x80
Chunk head       0x7f1fed5718e0
Return data from 0x7f1fed5718f0
To               0x7f1fed571960
************
128
0x7f1fed5718f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5719f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571a10 - 0x7f1fed571a30
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571a10
Return data from 0x7f1fed571a20
To               0x7f1fed571a30
************
32
0x7f1fed571a20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5718f0
pointer's head
0x7f1fed5718e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5718e0 - 0x7f1fed571960
Wanted size : 1 | 0x1
Got size    : 128 | 0x80
Chunk head       0x7f1fed5718e0
Return data from 0x7f1fed5718f0
To               0x7f1fed571960
************
128
0x7f1fed5718f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571a10 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571a30 - 0x7f1fed571a50
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571a30
Return data from 0x7f1fed571a40
To               0x7f1fed571a50
************
32
0x7f1fed571a40
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571a30 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571a50 - 0x7f1fed571a70
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571a50
Return data from 0x7f1fed571a60
To               0x7f1fed571a70
************
32
0x7f1fed571a60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571a50 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571a70 - 0x7f1fed571a90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571a70
Return data from 0x7f1fed571a80
To               0x7f1fed571a90
************
32
0x7f1fed571a80
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571a70 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571a90 - 0x7f1fed571ab0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571a90
Return data from 0x7f1fed571aa0
To               0x7f1fed571ab0
************
32
0x7f1fed571aa0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571a90 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571ab0 - 0x7f1fed571ad0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571ab0
Return data from 0x7f1fed571ac0
To               0x7f1fed571ad0
************
32
0x7f1fed571ac0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 27
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571ab0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571ad0 - 0x7f1fed571b00
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed571ad0
Return data from 0x7f1fed571ae0
To               0x7f1fed571b00
************
48
0x7f1fed571ae0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 27
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571ad0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed571b00 - 0x7f1fed571b30
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed571b00
Return data from 0x7f1fed571b10
To               0x7f1fed571b30
************
48
0x7f1fed571b10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571b00 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed571b30 - 0x7f1fed571b50
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571b30
Return data from 0x7f1fed571b40
To               0x7f1fed571b50
************
32
0x7f1fed571b40
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571b30 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571b50 - 0x7f1fed571b70
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571b50
Return data from 0x7f1fed571b60
To               0x7f1fed571b70
************
32
0x7f1fed571b60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 28
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571b50 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571b70 - 0x7f1fed571ba0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed571b70
Return data from 0x7f1fed571b80
To               0x7f1fed571ba0
************
48
0x7f1fed571b80
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 28
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571b70 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed571ba0 - 0x7f1fed571bd0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed571ba0
Return data from 0x7f1fed571bb0
To               0x7f1fed571bd0
************
48
0x7f1fed571bb0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571ba0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed571bd0 - 0x7f1fed571bf0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571bd0
Return data from 0x7f1fed571be0
To               0x7f1fed571bf0
************
32
0x7f1fed571be0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571bd0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571bf0 - 0x7f1fed571c10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571bf0
Return data from 0x7f1fed571c00
To               0x7f1fed571c10
************
32
0x7f1fed571c00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 44
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571bf0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571c10 - 0x7f1fed571c50
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed571c10
Return data from 0x7f1fed571c20
To               0x7f1fed571c50
************
64
0x7f1fed571c20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 44
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571c10 - 64 | 0x40
Found the end of chunk, chunk will be 0x7f1fed571c50 - 0x7f1fed571c90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed571c50
Return data from 0x7f1fed571c60
To               0x7f1fed571c90
************
64
0x7f1fed571c60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571c50 - 64 | 0x40
Found the end of chunk, chunk will be 0x7f1fed571c90 - 0x7f1fed571cb0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571c90
Return data from 0x7f1fed571ca0
To               0x7f1fed571cb0
************
32
0x7f1fed571ca0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571c90 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571cb0 - 0x7f1fed571cd0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571cb0
Return data from 0x7f1fed571cc0
To               0x7f1fed571cd0
************
32
0x7f1fed571cc0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571cb0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571cd0 - 0x7f1fed571cf0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571cd0
Return data from 0x7f1fed571ce0
To               0x7f1fed571cf0
************
32
0x7f1fed571ce0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571cd0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571cf0 - 0x7f1fed571d10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571cf0
Return data from 0x7f1fed571d00
To               0x7f1fed571d10
************
32
0x7f1fed571d00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571cf0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571d10 - 0x7f1fed571d30
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571d10
Return data from 0x7f1fed571d20
To               0x7f1fed571d30
************
32
0x7f1fed571d20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571d10 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571d30 - 0x7f1fed571d50
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571d30
Return data from 0x7f1fed571d40
To               0x7f1fed571d50
************
32
0x7f1fed571d40
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571d30 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571d50 - 0x7f1fed571d70
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571d50
Return data from 0x7f1fed571d60
To               0x7f1fed571d70
************
32
0x7f1fed571d60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571d50 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571d70 - 0x7f1fed571d90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571d70
Return data from 0x7f1fed571d80
To               0x7f1fed571d90
************
32
0x7f1fed571d80
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571d70 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571d90 - 0x7f1fed571db0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571d90
Return data from 0x7f1fed571da0
To               0x7f1fed571db0
************
32
0x7f1fed571da0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571d90 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571db0 - 0x7f1fed571dd0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571db0
Return data from 0x7f1fed571dc0
To               0x7f1fed571dd0
************
32
0x7f1fed571dc0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed571da0
pointer's head
0x7f1fed571d90
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed571d90 - 0x7f1fed571db0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed571d90
Return data from 0x7f1fed571da0
To               0x7f1fed571db0
************
32
0x7f1fed571da0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571db0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571dd0 - 0x7f1fed571df0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571dd0
Return data from 0x7f1fed571de0
To               0x7f1fed571df0
************
32
0x7f1fed571de0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571dd0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571df0 - 0x7f1fed571e10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571df0
Return data from 0x7f1fed571e00
To               0x7f1fed571e10
************
32
0x7f1fed571e00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571df0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571e10 - 0x7f1fed571e30
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571e10
Return data from 0x7f1fed571e20
To               0x7f1fed571e30
************
32
0x7f1fed571e20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed571e00
pointer's head
0x7f1fed571df0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed571df0 - 0x7f1fed571e10
Wanted size : 1 | 0x1
Got size    : 32 | 0x20
Chunk head       0x7f1fed571df0
Return data from 0x7f1fed571e00
To               0x7f1fed571e10
************
32
0x7f1fed571e00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571e10 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571e30 - 0x7f1fed571e50
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571e30
Return data from 0x7f1fed571e40
To               0x7f1fed571e50
************
32
0x7f1fed571e40
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed571e00
pointer's head
0x7f1fed571df0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed571df0 - 0x7f1fed571e10
Wanted size : 1 | 0x1
Got size    : 32 | 0x20
Chunk head       0x7f1fed571df0
Return data from 0x7f1fed571e00
To               0x7f1fed571e10
************
32
0x7f1fed571e00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571e30 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571e50 - 0x7f1fed571e70
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571e50
Return data from 0x7f1fed571e60
To               0x7f1fed571e70
************
32
0x7f1fed571e60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed571e00
pointer's head
0x7f1fed571df0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 607
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecaca3c0 - 368 | 0x170
Found the end of chunk, chunk will be 0x7f1fecaca530 - 0x7f1fecaca7a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 624 | 0x270 | 0b1001110000
Chunk head       0x7f1fecaca530
Return data from 0x7f1fecaca540
To               0x7f1fecaca7a0
************
624
0x7f1fecaca540
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 607
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecaca530 - 624 | 0x270
Found the end of chunk, chunk will be 0x7f1fecaca7a0 - 0x7f1fecacaa10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 624 | 0x270 | 0b1001110000
Chunk head       0x7f1fecaca7a0
Return data from 0x7f1fecaca7b0
To               0x7f1fecacaa10
************
624
0x7f1fecaca7b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecaca540
pointer's head
0x7f1fecaca530
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed571df0 - 0x7f1fed571e10
Wanted size : 1 | 0x1
Got size    : 32 | 0x20
Chunk head       0x7f1fed571df0
Return data from 0x7f1fed571e00
To               0x7f1fed571e10
************
32
0x7f1fed571e00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571e50 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571e70 - 0x7f1fed571e90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571e70
Return data from 0x7f1fed571e80
To               0x7f1fed571e90
************
32
0x7f1fed571e80
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571e70 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571e90 - 0x7f1fed571eb0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571e90
Return data from 0x7f1fed571ea0
To               0x7f1fed571eb0
************
32
0x7f1fed571ea0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571e90 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571eb0 - 0x7f1fed571ed0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571eb0
Return data from 0x7f1fed571ec0
To               0x7f1fed571ed0
************
32
0x7f1fed571ec0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571eb0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571ed0 - 0x7f1fed571ef0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571ed0
Return data from 0x7f1fed571ee0
To               0x7f1fed571ef0
************
32
0x7f1fed571ee0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571ed0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571ef0 - 0x7f1fed571f10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571ef0
Return data from 0x7f1fed571f00
To               0x7f1fed571f10
************
32
0x7f1fed571f00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 2
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571ef0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571f10 - 0x7f1fed571f30
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571f10
Return data from 0x7f1fed571f20
To               0x7f1fed571f30
************
32
0x7f1fed571f20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 2
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571f10 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571f30 - 0x7f1fed571f50
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571f30
Return data from 0x7f1fed571f40
To               0x7f1fed571f50
************
32
0x7f1fed571f40
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 2
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571f30 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571f50 - 0x7f1fed571f70
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571f50
Return data from 0x7f1fed571f60
To               0x7f1fed571f70
************
32
0x7f1fed571f60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 2
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571f50 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571f70 - 0x7f1fed571f90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571f70
Return data from 0x7f1fed571f80
To               0x7f1fed571f90
************
32
0x7f1fed571f80
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571f70 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571f90 - 0x7f1fed571fb0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571f90
Return data from 0x7f1fed571fa0
To               0x7f1fed571fb0
************
32
0x7f1fed571fa0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571f90 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571fb0 - 0x7f1fed571fd0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571fb0
Return data from 0x7f1fed571fc0
To               0x7f1fed571fd0
************
32
0x7f1fed571fc0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571fb0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571fd0 - 0x7f1fed571ff0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571fd0
Return data from 0x7f1fed571fe0
To               0x7f1fed571ff0
************
32
0x7f1fed571fe0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571fd0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed571ff0 - 0x7f1fed572010
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed571ff0
Return data from 0x7f1fed572000
To               0x7f1fed572010
************
32
0x7f1fed572000
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed571ff0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572010 - 0x7f1fed572030
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572010
Return data from 0x7f1fed572020
To               0x7f1fed572030
************
32
0x7f1fed572020
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572010 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572030 - 0x7f1fed572050
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572030
Return data from 0x7f1fed572040
To               0x7f1fed572050
************
32
0x7f1fed572040
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572030 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572050 - 0x7f1fed572070
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572050
Return data from 0x7f1fed572060
To               0x7f1fed572070
************
32
0x7f1fed572060
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572050 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572070 - 0x7f1fed572090
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572070
Return data from 0x7f1fed572080
To               0x7f1fed572090
************
32
0x7f1fed572080
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 3
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572070 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572090 - 0x7f1fed5720b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572090
Return data from 0x7f1fed5720a0
To               0x7f1fed5720b0
************
32
0x7f1fed5720a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 3
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572090 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5720b0 - 0x7f1fed5720d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 23
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5720b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5720d0 - 0x7f1fed572100
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5720d0
Return data from 0x7f1fed5720e0
To               0x7f1fed572100
************
48
0x7f1fed5720e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 23
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5720d0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed572100 - 0x7f1fed572130
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed572100
Return data from 0x7f1fed572110
To               0x7f1fed572130
************
48
0x7f1fed572110
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572100 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed572130 - 0x7f1fed572150
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572130
Return data from 0x7f1fed572140
To               0x7f1fed572150
************
32
0x7f1fed572140
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572130 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572150 - 0x7f1fed572170
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572150
Return data from 0x7f1fed572160
To               0x7f1fed572170
************
32
0x7f1fed572160
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572140
pointer's head
0x7f1fed572130
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 21
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572150 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572170 - 0x7f1fed5721a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed572170
Return data from 0x7f1fed572180
To               0x7f1fed5721a0
************
48
0x7f1fed572180
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 21
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572170 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed5721a0 - 0x7f1fed5721d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5721a0
Return data from 0x7f1fed5721b0
To               0x7f1fed5721d0
************
48
0x7f1fed5721b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572180
pointer's head
0x7f1fed572170
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 16
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572130 - 0x7f1fed572150
Wanted size : 16 | 0x10
Got size    : 32 | 0x20
Chunk head       0x7f1fed572130
Return data from 0x7f1fed572140
To               0x7f1fed572150
************
32
0x7f1fed572140
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 16
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572170 - 0x7f1fed5721a0
Wanted size : 16 | 0x10
Got size    : 48 | 0x30
Chunk head       0x7f1fed572170
Return data from 0x7f1fed572180
To               0x7f1fed5721a0
************
48
0x7f1fed572180
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572140
pointer's head
0x7f1fed572130
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572130 - 0x7f1fed572150
Wanted size : 1 | 0x1
Got size    : 32 | 0x20
Chunk head       0x7f1fed572130
Return data from 0x7f1fed572140
To               0x7f1fed572150
************
32
0x7f1fed572140
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5721a0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed5721d0 - 0x7f1fed5721f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5721d0
Return data from 0x7f1fed5721e0
To               0x7f1fed5721f0
************
32
0x7f1fed5721e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5721d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5721f0 - 0x7f1fed572210
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5721f0
Return data from 0x7f1fed572200
To               0x7f1fed572210
************
32
0x7f1fed572200
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5721f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572210 - 0x7f1fed572230
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572210
Return data from 0x7f1fed572220
To               0x7f1fed572230
************
32
0x7f1fed572220
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 27
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572210 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572230 - 0x7f1fed572260
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed572230
Return data from 0x7f1fed572240
To               0x7f1fed572260
************
48
0x7f1fed572240
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 27
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572230 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed572260 - 0x7f1fed572290
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed572260
Return data from 0x7f1fed572270
To               0x7f1fed572290
************
48
0x7f1fed572270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572260 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed572290 - 0x7f1fed5722b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572290
Return data from 0x7f1fed5722a0
To               0x7f1fed5722b0
************
32
0x7f1fed5722a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572290 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5722b0 - 0x7f1fed5722d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5722b0
Return data from 0x7f1fed5722c0
To               0x7f1fed5722d0
************
32
0x7f1fed5722c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5722b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5722d0 - 0x7f1fed5722f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5722d0
Return data from 0x7f1fed5722e0
To               0x7f1fed5722f0
************
32
0x7f1fed5722e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5722d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5722f0 - 0x7f1fed572310
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5722f0
Return data from 0x7f1fed572300
To               0x7f1fed572310
************
32
0x7f1fed572300
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5722f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572310 - 0x7f1fed572330
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572310
Return data from 0x7f1fed572320
To               0x7f1fed572330
************
32
0x7f1fed572320
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572310 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572330 - 0x7f1fed572350
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572330
Return data from 0x7f1fed572340
To               0x7f1fed572350
************
32
0x7f1fed572340
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572330 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572350 - 0x7f1fed572370
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572350
Return data from 0x7f1fed572360
To               0x7f1fed572370
************
32
0x7f1fed572360
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572350 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572370 - 0x7f1fed572390
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572370
Return data from 0x7f1fed572380
To               0x7f1fed572390
************
32
0x7f1fed572380
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572360
pointer's head
0x7f1fed572350
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 746
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecaca7a0 - 624 | 0x270
Found the end of chunk, chunk will be 0x7f1fecacaa10 - 0x7f1fecacad10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 768 | 0x300 | 0b1100000000
Chunk head       0x7f1fecacaa10
Return data from 0x7f1fecacaa20
To               0x7f1fecacad10
************
768
0x7f1fecacaa20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 746
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecacaa10 - 768 | 0x300
Found the end of chunk, chunk will be 0x7f1fecacad10 - 0x7f1fecacb010
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 768 | 0x300 | 0b1100000000
Chunk head       0x7f1fecacad10
Return data from 0x7f1fecacad20
To               0x7f1fecacb010
************
768
0x7f1fecacad20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecacaa20
pointer's head
0x7f1fecacaa10
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572350 - 0x7f1fed572370
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed572350
Return data from 0x7f1fed572360
To               0x7f1fed572370
************
32
0x7f1fed572360
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572370 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572390 - 0x7f1fed5723b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572390
Return data from 0x7f1fed5723a0
To               0x7f1fed5723b0
************
32
0x7f1fed5723a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572360
pointer's head
0x7f1fed572350
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572350 - 0x7f1fed572370
Wanted size : 1 | 0x1
Got size    : 32 | 0x20
Chunk head       0x7f1fed572350
Return data from 0x7f1fed572360
To               0x7f1fed572370
************
32
0x7f1fed572360
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572390 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5723b0 - 0x7f1fed5723d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5723b0
Return data from 0x7f1fed5723c0
To               0x7f1fed5723d0
************
32
0x7f1fed5723c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572360
pointer's head
0x7f1fed572350
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572350 - 0x7f1fed572370
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed572350
Return data from 0x7f1fed572360
To               0x7f1fed572370
************
32
0x7f1fed572360
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5723b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5723d0 - 0x7f1fed5723f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5723d0
Return data from 0x7f1fed5723e0
To               0x7f1fed5723f0
************
32
0x7f1fed5723e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572360
pointer's head
0x7f1fed572350
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572350 - 0x7f1fed572370
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed572350
Return data from 0x7f1fed572360
To               0x7f1fed572370
************
32
0x7f1fed572360
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5723d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5723f0 - 0x7f1fed572410
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5723f0
Return data from 0x7f1fed572400
To               0x7f1fed572410
************
32
0x7f1fed572400
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 14
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5723f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572410 - 0x7f1fed572430
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572410
Return data from 0x7f1fed572420
To               0x7f1fed572430
************
32
0x7f1fed572420
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 14
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572410 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572430 - 0x7f1fed572450
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572430
Return data from 0x7f1fed572440
To               0x7f1fed572450
************
32
0x7f1fed572440
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572430 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572450 - 0x7f1fed572470
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572450
Return data from 0x7f1fed572460
To               0x7f1fed572470
************
32
0x7f1fed572460
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572450 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572470 - 0x7f1fed572490
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572470
Return data from 0x7f1fed572480
To               0x7f1fed572490
************
32
0x7f1fed572480
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 17
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572470 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572490 - 0x7f1fed5724c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed572490
Return data from 0x7f1fed5724a0
To               0x7f1fed5724c0
************
48
0x7f1fed5724a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 17
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572490 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed5724c0 - 0x7f1fed5724f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5724c0
Return data from 0x7f1fed5724d0
To               0x7f1fed5724f0
************
48
0x7f1fed5724d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5724a0
pointer's head
0x7f1fed572490
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 2
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572490 - 0x7f1fed5724c0
Wanted size : 2 | 0x2
Got size    : 48 | 0x30
Chunk head       0x7f1fed572490
Return data from 0x7f1fed5724a0
To               0x7f1fed5724c0
************
48
0x7f1fed5724a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 2
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5724c0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed5724f0 - 0x7f1fed572510
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5724f0
Return data from 0x7f1fed572500
To               0x7f1fed572510
************
32
0x7f1fed572500
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5724f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572510 - 0x7f1fed572530
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572510
Return data from 0x7f1fed572520
To               0x7f1fed572530
************
32
0x7f1fed572520
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572510 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572530 - 0x7f1fed572550
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572530
Return data from 0x7f1fed572540
To               0x7f1fed572550
************
32
0x7f1fed572540
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572530 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572550 - 0x7f1fed572570
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572550
Return data from 0x7f1fed572560
To               0x7f1fed572570
************
32
0x7f1fed572560
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572550 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572570 - 0x7f1fed572590
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572570
Return data from 0x7f1fed572580
To               0x7f1fed572590
************
32
0x7f1fed572580
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572560
pointer's head
0x7f1fed572550
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572550 - 0x7f1fed572570
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed572550
Return data from 0x7f1fed572560
To               0x7f1fed572570
************
32
0x7f1fed572560
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572570 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572590 - 0x7f1fed5725b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572590
Return data from 0x7f1fed5725a0
To               0x7f1fed5725b0
************
32
0x7f1fed5725a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 19
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572590 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5725b0 - 0x7f1fed5725e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5725b0
Return data from 0x7f1fed5725c0
To               0x7f1fed5725e0
************
48
0x7f1fed5725c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 19
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5725b0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed5725e0 - 0x7f1fed572610
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5725e0
Return data from 0x7f1fed5725f0
To               0x7f1fed572610
************
48
0x7f1fed5725f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5725e0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed572610 - 0x7f1fed572630
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572610
Return data from 0x7f1fed572620
To               0x7f1fed572630
************
32
0x7f1fed572620
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572610 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572630 - 0x7f1fed572650
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572630
Return data from 0x7f1fed572640
To               0x7f1fed572650
************
32
0x7f1fed572640
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 3
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572630 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572650 - 0x7f1fed572670
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572650
Return data from 0x7f1fed572660
To               0x7f1fed572670
************
32
0x7f1fed572660
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 3
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572650 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572670 - 0x7f1fed572690
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572670
Return data from 0x7f1fed572680
To               0x7f1fed572690
************
32
0x7f1fed572680
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572670 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572690 - 0x7f1fed5726b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572690
Return data from 0x7f1fed5726a0
To               0x7f1fed5726b0
************
32
0x7f1fed5726a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572690 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5726b0 - 0x7f1fed5726d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5726b0
Return data from 0x7f1fed5726c0
To               0x7f1fed5726d0
************
32
0x7f1fed5726c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5726b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5726d0 - 0x7f1fed5726f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5726d0
Return data from 0x7f1fed5726e0
To               0x7f1fed5726f0
************
32
0x7f1fed5726e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5726d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5726f0 - 0x7f1fed572710
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5726f0
Return data from 0x7f1fed572700
To               0x7f1fed572710
************
32
0x7f1fed572700
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5726e0
pointer's head
0x7f1fed5726d0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5726d0 - 0x7f1fed5726f0
Wanted size : 1 | 0x1
Got size    : 32 | 0x20
Chunk head       0x7f1fed5726d0
Return data from 0x7f1fed5726e0
To               0x7f1fed5726f0
************
32
0x7f1fed5726e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5726f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572710 - 0x7f1fed572730
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572710
Return data from 0x7f1fed572720
To               0x7f1fed572730
************
32
0x7f1fed572720
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572710 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572730 - 0x7f1fed572750
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572730
Return data from 0x7f1fed572740
To               0x7f1fed572750
************
32
0x7f1fed572740
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572730 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572750 - 0x7f1fed572770
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572750
Return data from 0x7f1fed572760
To               0x7f1fed572770
************
32
0x7f1fed572760
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572750 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572770 - 0x7f1fed572790
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572770
Return data from 0x7f1fed572780
To               0x7f1fed572790
************
32
0x7f1fed572780
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572770 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572790 - 0x7f1fed5727b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572790
Return data from 0x7f1fed5727a0
To               0x7f1fed5727b0
************
32
0x7f1fed5727a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572780
pointer's head
0x7f1fed572770
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572770 - 0x7f1fed572790
Wanted size : 1 | 0x1
Got size    : 32 | 0x20
Chunk head       0x7f1fed572770
Return data from 0x7f1fed572780
To               0x7f1fed572790
************
32
0x7f1fed572780
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572790 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5727b0 - 0x7f1fed5727d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5727b0
Return data from 0x7f1fed5727c0
To               0x7f1fed5727d0
************
32
0x7f1fed5727c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 24
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5727b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5727d0 - 0x7f1fed572800
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5727d0
Return data from 0x7f1fed5727e0
To               0x7f1fed572800
************
48
0x7f1fed5727e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 24
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5727d0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed572800 - 0x7f1fed572830
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed572800
Return data from 0x7f1fed572810
To               0x7f1fed572830
************
48
0x7f1fed572810
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5727e0
pointer's head
0x7f1fed5727d0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5727d0 - 0x7f1fed572800
Wanted size : 1 | 0x1
Got size    : 48 | 0x30
Chunk head       0x7f1fed5727d0
Return data from 0x7f1fed5727e0
To               0x7f1fed572800
************
48
0x7f1fed5727e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572800 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed572830 - 0x7f1fed572850
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572830
Return data from 0x7f1fed572840
To               0x7f1fed572850
************
32
0x7f1fed572840
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572830 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572850 - 0x7f1fed572870
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572850
Return data from 0x7f1fed572860
To               0x7f1fed572870
************
32
0x7f1fed572860
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572850 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572870 - 0x7f1fed572890
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572870
Return data from 0x7f1fed572880
To               0x7f1fed572890
************
32
0x7f1fed572880
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572870 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572890 - 0x7f1fed5728b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572890
Return data from 0x7f1fed5728a0
To               0x7f1fed5728b0
************
32
0x7f1fed5728a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572890 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5728b0 - 0x7f1fed5728d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5728b0
Return data from 0x7f1fed5728c0
To               0x7f1fed5728d0
************
32
0x7f1fed5728c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5728a0
pointer's head
0x7f1fed572890
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572890 - 0x7f1fed5728b0
Wanted size : 1 | 0x1
Got size    : 32 | 0x20
Chunk head       0x7f1fed572890
Return data from 0x7f1fed5728a0
To               0x7f1fed5728b0
************
32
0x7f1fed5728a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5728b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5728d0 - 0x7f1fed5728f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5728d0
Return data from 0x7f1fed5728e0
To               0x7f1fed5728f0
************
32
0x7f1fed5728e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5728a0
pointer's head
0x7f1fed572890
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572890 - 0x7f1fed5728b0
Wanted size : 1 | 0x1
Got size    : 32 | 0x20
Chunk head       0x7f1fed572890
Return data from 0x7f1fed5728a0
To               0x7f1fed5728b0
************
32
0x7f1fed5728a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5728d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5728f0 - 0x7f1fed572910
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5728f0
Return data from 0x7f1fed572900
To               0x7f1fed572910
************
32
0x7f1fed572900
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5728f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572910 - 0x7f1fed572930
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572910
Return data from 0x7f1fed572920
To               0x7f1fed572930
************
32
0x7f1fed572920
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572910 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572930 - 0x7f1fed572950
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572930
Return data from 0x7f1fed572940
To               0x7f1fed572950
************
32
0x7f1fed572940
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572930 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572950 - 0x7f1fed572970
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572950
Return data from 0x7f1fed572960
To               0x7f1fed572970
************
32
0x7f1fed572960
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572950 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572970 - 0x7f1fed572990
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572970
Return data from 0x7f1fed572980
To               0x7f1fed572990
************
32
0x7f1fed572980
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572960
pointer's head
0x7f1fed572950
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572950 - 0x7f1fed572970
Wanted size : 1 | 0x1
Got size    : 32 | 0x20
Chunk head       0x7f1fed572950
Return data from 0x7f1fed572960
To               0x7f1fed572970
************
32
0x7f1fed572960
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572970 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572990 - 0x7f1fed5729b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572990
Return data from 0x7f1fed5729a0
To               0x7f1fed5729b0
************
32
0x7f1fed5729a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 20
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572990 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5729b0 - 0x7f1fed5729e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5729b0
Return data from 0x7f1fed5729c0
To               0x7f1fed5729e0
************
48
0x7f1fed5729c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6000
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed566000
To             0x7f1fed568000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed566018 => 0x7f1fed566020

Chunk size : 6016 | 0x1780 | 0b1011110000000
Chunk head       0x7f1fed566020
Return data from 0x7f1fed566030
To               0x7f1fed5677a0
************
6016
0x7f1fed566030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1280
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fed565000
To             0x7f1fed566000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed565018 => 0x7f1fed565020

Chunk size : 1296 | 0x510 | 0b10100010000
Chunk head       0x7f1fed565020
Return data from 0x7f1fed565030
To               0x7f1fed565530
************
1296
0x7f1fed565030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 496
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecaca530 - 0x7f1fecaca7a0
Wanted size : 496 | 0x1f0
Got size    : 624 | 0x270
Chunk head       0x7f1fecaca530
Return data from 0x7f1fecaca540
To               0x7f1fecaca7a0
************
624
0x7f1fecaca540
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecaca540
pointer's head
0x7f1fecaca530
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 20
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5729b0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed5729e0 - 0x7f1fed572a10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5729e0
Return data from 0x7f1fed5729f0
To               0x7f1fed572a10
************
48
0x7f1fed5729f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed566030
pointer's head
0x7f1fed566020
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5729c0
pointer's head
0x7f1fed5729b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 51
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5729e0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed572a10 - 0x7f1fed572a60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 80 | 0x50 | 0b1010000
Chunk head       0x7f1fed572a10
Return data from 0x7f1fed572a20
To               0x7f1fed572a60
************
80
0x7f1fed572a20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 42
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572a10 - 80 | 0x50
Found the end of chunk, chunk will be 0x7f1fed572a60 - 0x7f1fed572aa0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed572a60
Return data from 0x7f1fed572a70
To               0x7f1fed572aa0
************
64
0x7f1fed572a70
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 34
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572a60 - 64 | 0x40
Found the end of chunk, chunk will be 0x7f1fed572aa0 - 0x7f1fed572ae0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed572aa0
Return data from 0x7f1fed572ab0
To               0x7f1fed572ae0
************
64
0x7f1fed572ab0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5729b0 - 0x7f1fed5729e0
Wanted size : 15 | 0xf
Got size    : 48 | 0x30
Chunk head       0x7f1fed5729b0
Return data from 0x7f1fed5729c0
To               0x7f1fed5729e0
************
48
0x7f1fed5729c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fecac9b70
ptr : 0x7f1fecac9b60
Downgrading, no need to change ptr
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 19
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572aa0 - 64 | 0x40
Found the end of chunk, chunk will be 0x7f1fed572ae0 - 0x7f1fed572b10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed572ae0
Return data from 0x7f1fed572af0
To               0x7f1fed572b10
************
48
0x7f1fed572af0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 24
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572ae0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed572b10 - 0x7f1fed572b40
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed572b10
Return data from 0x7f1fed572b20
To               0x7f1fed572b40
************
48
0x7f1fed572b20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5729c0
pointer's head
0x7f1fed5729b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 205
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572b10 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed572b40 - 0x7f1fed572c20
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 224 | 0xe0 | 0b11100000
Chunk head       0x7f1fed572b40
Return data from 0x7f1fed572b50
To               0x7f1fed572c20
************
224
0x7f1fed572b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 48
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572b40 - 224 | 0xe0
Found the end of chunk, chunk will be 0x7f1fed572c20 - 0x7f1fed572c60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed572c20
Return data from 0x7f1fed572c30
To               0x7f1fed572c60
************
64
0x7f1fed572c30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572c30
pointer's head
0x7f1fed572c20
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 472
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecaca530 - 0x7f1fecaca7a0
Wanted size : 472 | 0x1d8
Got size    : 624 | 0x270
Chunk head       0x7f1fecaca530
Return data from 0x7f1fecaca540
To               0x7f1fecaca7a0
************
624
0x7f1fecaca540
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fed566000
To             0x7f1fed568000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed566018 => 0x7f1fed566020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fed566020
Return data from 0x7f1fed566030
To               0x7f1fed567030
************
4112
0x7f1fed566030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
No ptr, just allocating
###########INSIDE MALLOC##########
Wanted size : 1600
Page size corresponding : 4096 | 0x1000
page : 0x7f1fed565000 - 0x7f1fed566000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed565020 - 1296 | 0x510
Found the end of chunk, chunk will be 0x7f1fed565530 - 0x7f1fed565b80
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 1616 | 0x650 | 0b11001010000
Chunk head       0x7f1fed565530
Return data from 0x7f1fed565540
To               0x7f1fed565b80
************
1616
0x7f1fed565540
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
No ptr, just allocating
###########INSIDE MALLOC##########
Wanted size : 1024
Page size corresponding : 4096 | 0x1000
page : 0x7f1fed565000 - 0x7f1fed566000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed565530 - 1616 | 0x650
Found the end of chunk, chunk will be 0x7f1fed565b80 - 0x7f1fed565f90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 1040 | 0x410 | 0b10000010000
Chunk head       0x7f1fed565b80
Return data from 0x7f1fed565b90
To               0x7f1fed565f90
************
1040
0x7f1fed565b90
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fed565b90
ptr : 0x7f1fed565b80
Upgrading from 1040 to 2048, changing ptr
###########INSIDE MALLOC##########
Wanted size : 2048
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fec58f000
To             0x7f1fec590000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec58f018 => 0x7f1fec58f020

Chunk size : 2064 | 0x810 | 0b100000010000
Chunk head       0x7f1fec58f020
Return data from 0x7f1fec58f030
To               0x7f1fec58f830
************
2064
0x7f1fec58f030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fec58f030
Freeing old ptr : 0x7f1fed565b90
###########INSIDE FREE##########
pointer to free
0x7f1fed565b90
pointer's head
0x7f1fed565b80
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
Still used blocks, will not remove page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed566030
pointer's head
0x7f1fed566020
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecaca540
pointer's head
0x7f1fecaca530
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 48
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572c20 - 65 | 0x41
Found the end of chunk, chunk will be 0x7f1fed572c60 - 0x7f1fed572ca0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed572c60
Return data from 0x7f1fed572c70
To               0x7f1fed572ca0
************
64
0x7f1fed572c70
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 56
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572c60 - 64 | 0x40
Found the end of chunk, chunk will be 0x7f1fed572ca0 - 0x7f1fed572cf0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 80 | 0x50 | 0b1010000
Chunk head       0x7f1fed572ca0
Return data from 0x7f1fed572cb0
To               0x7f1fed572cf0
************
80
0x7f1fed572cb0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 49
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572ca0 - 80 | 0x50
Found the end of chunk, chunk will be 0x7f1fed572cf0 - 0x7f1fed572d40
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 80 | 0x50 | 0b1010000
Chunk head       0x7f1fed572cf0
Return data from 0x7f1fed572d00
To               0x7f1fed572d40
************
80
0x7f1fed572d00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 56
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572cf0 - 80 | 0x50
Found the end of chunk, chunk will be 0x7f1fed572d40 - 0x7f1fed572d90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 80 | 0x50 | 0b1010000
Chunk head       0x7f1fed572d40
Return data from 0x7f1fed572d50
To               0x7f1fed572d90
************
80
0x7f1fed572d50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 49
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572d40 - 80 | 0x50
Found the end of chunk, chunk will be 0x7f1fed572d90 - 0x7f1fed572de0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 80 | 0x50 | 0b1010000
Chunk head       0x7f1fed572d90
Return data from 0x7f1fed572da0
To               0x7f1fed572de0
************
80
0x7f1fed572da0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572da0
pointer's head
0x7f1fed572d90
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 18
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5729b0 - 0x7f1fed5729e0
Wanted size : 18 | 0x12
Got size    : 48 | 0x30
Chunk head       0x7f1fed5729b0
Return data from 0x7f1fed5729c0
To               0x7f1fed5729e0
************
48
0x7f1fed5729c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 205
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572d90 - 81 | 0x51
Found the end of chunk, chunk will be 0x7f1fed572de0 - 0x7f1fed572ec0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 224 | 0xe0 | 0b11100000
Chunk head       0x7f1fed572de0
Return data from 0x7f1fed572df0
To               0x7f1fed572ec0
************
224
0x7f1fed572df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 48
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572c20 - 0x7f1fed572c60
Wanted size : 48 | 0x30
Got size    : 64 | 0x40
Chunk head       0x7f1fed572c20
Return data from 0x7f1fed572c30
To               0x7f1fed572c60
************
64
0x7f1fed572c30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed572c30
pointer's head
0x7f1fed572c20
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 22
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572c20 - 0x7f1fed572c60
Wanted size : 22 | 0x16
Got size    : 64 | 0x40
Chunk head       0x7f1fed572c20
Return data from 0x7f1fed572c30
To               0x7f1fed572c60
************
64
0x7f1fed572c30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 32
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572d90 - 0x7f1fed572de0
Wanted size : 32 | 0x20
Got size    : 80 | 0x50
Chunk head       0x7f1fed572d90
Return data from 0x7f1fed572da0
To               0x7f1fed572de0
************
80
0x7f1fed572da0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572de0 - 224 | 0xe0
Found the end of chunk, chunk will be 0x7f1fed572ec0 - 0x7f1fed572ee0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572ec0
Return data from 0x7f1fed572ed0
To               0x7f1fed572ee0
************
32
0x7f1fed572ed0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572ec0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572ee0 - 0x7f1fed572f00
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572ee0
Return data from 0x7f1fed572ef0
To               0x7f1fed572f00
************
32
0x7f1fed572ef0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
No ptr, just allocating
###########INSIDE MALLOC##########
Wanted size : 1920
Page size corresponding : 4096 | 0x1000
page : 0x7f1fec58f000 - 0x7f1fec590000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fec58f020 - 2064 | 0x810
Found the end of chunk, chunk will be 0x7f1fec58f830 - 0x7f1fec58ffc0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 1936 | 0x790 | 0b11110010000
Chunk head       0x7f1fec58f830
Return data from 0x7f1fec58f840
To               0x7f1fec58ffc0
************
1936
0x7f1fec58f840
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572ee0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572f00 - 0x7f1fed572f20
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572f00
Return data from 0x7f1fed572f10
To               0x7f1fed572f20
************
32
0x7f1fed572f10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572f00 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572f20 - 0x7f1fed572f40
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572f20
Return data from 0x7f1fed572f30
To               0x7f1fed572f40
************
32
0x7f1fed572f30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572f20 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572f40 - 0x7f1fed572f60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572f40
Return data from 0x7f1fed572f50
To               0x7f1fed572f60
************
32
0x7f1fed572f50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572f40 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572f60 - 0x7f1fed572f80
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572f60
Return data from 0x7f1fed572f70
To               0x7f1fed572f80
************
32
0x7f1fed572f70
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572f60 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572f80 - 0x7f1fed572fa0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572f80
Return data from 0x7f1fed572f90
To               0x7f1fed572fa0
************
32
0x7f1fed572f90
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572f80 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572fa0 - 0x7f1fed572fc0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572fa0
Return data from 0x7f1fed572fb0
To               0x7f1fed572fc0
************
32
0x7f1fed572fb0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572fa0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572fc0 - 0x7f1fed572fe0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572fc0
Return data from 0x7f1fed572fd0
To               0x7f1fed572fe0
************
32
0x7f1fed572fd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572fc0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed572fe0 - 0x7f1fed573000
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed572fe0
Return data from 0x7f1fed572ff0
To               0x7f1fed573000
************
32
0x7f1fed572ff0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed572fe0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573000 - 0x7f1fed573020
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573000
Return data from 0x7f1fed573010
To               0x7f1fed573020
************
32
0x7f1fed573010
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573000 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573020 - 0x7f1fed573040
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573020
Return data from 0x7f1fed573030
To               0x7f1fed573040
************
32
0x7f1fed573030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573020 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573040 - 0x7f1fed573060
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573040
Return data from 0x7f1fed573050
To               0x7f1fed573060
************
32
0x7f1fed573050
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573040 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573060 - 0x7f1fed573080
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573060
Return data from 0x7f1fed573070
To               0x7f1fed573080
************
32
0x7f1fed573070
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573060 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573080 - 0x7f1fed5730a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573080
Return data from 0x7f1fed573090
To               0x7f1fed5730a0
************
32
0x7f1fed573090
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573080 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5730a0 - 0x7f1fed5730c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5730a0
Return data from 0x7f1fed5730b0
To               0x7f1fed5730c0
************
32
0x7f1fed5730b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5730a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5730c0 - 0x7f1fed5730e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5730c0
Return data from 0x7f1fed5730d0
To               0x7f1fed5730e0
************
32
0x7f1fed5730d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5730c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5730e0 - 0x7f1fed573100
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5730e0
Return data from 0x7f1fed5730f0
To               0x7f1fed573100
************
32
0x7f1fed5730f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5730e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573100 - 0x7f1fed573120
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573100
Return data from 0x7f1fed573110
To               0x7f1fed573120
************
32
0x7f1fed573110
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573100 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573120 - 0x7f1fed573140
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573120
Return data from 0x7f1fed573130
To               0x7f1fed573140
************
32
0x7f1fed573130
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573120 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573140 - 0x7f1fed573160
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573140
Return data from 0x7f1fed573150
To               0x7f1fed573160
************
32
0x7f1fed573150
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573140 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573160 - 0x7f1fed573180
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573160
Return data from 0x7f1fed573170
To               0x7f1fed573180
************
32
0x7f1fed573170
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fec58f840
ptr : 0x7f1fec58f830
Upgrading from 1936 to 3840, changing ptr
###########INSIDE MALLOC##########
Wanted size : 3840
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fed567000
To             0x7f1fed568000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed567018 => 0x7f1fed567020

Chunk size : 3856 | 0xf10 | 0b111100010000
Chunk head       0x7f1fed567020
Return data from 0x7f1fed567030
To               0x7f1fed567f30
************
3856
0x7f1fed567030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fed567030
Freeing old ptr : 0x7f1fec58f840
###########INSIDE FREE##########
pointer to free
0x7f1fec58f840
pointer's head
0x7f1fec58f830
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
Still used blocks, will not remove page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573160 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573180 - 0x7f1fed5731a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573180
Return data from 0x7f1fed573190
To               0x7f1fed5731a0
************
32
0x7f1fed573190
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573180 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5731a0 - 0x7f1fed5731c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5731a0
Return data from 0x7f1fed5731b0
To               0x7f1fed5731c0
************
32
0x7f1fed5731b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5731a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5731c0 - 0x7f1fed5731e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5731c0
Return data from 0x7f1fed5731d0
To               0x7f1fed5731e0
************
32
0x7f1fed5731d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5731c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5731e0 - 0x7f1fed573200
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5731e0
Return data from 0x7f1fed5731f0
To               0x7f1fed573200
************
32
0x7f1fed5731f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5731e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573200 - 0x7f1fed573220
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573200
Return data from 0x7f1fed573210
To               0x7f1fed573220
************
32
0x7f1fed573210
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573200 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573220 - 0x7f1fed573240
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573220
Return data from 0x7f1fed573230
To               0x7f1fed573240
************
32
0x7f1fed573230
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573220 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573240 - 0x7f1fed573260
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573240
Return data from 0x7f1fed573250
To               0x7f1fed573260
************
32
0x7f1fed573250
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573240 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573260 - 0x7f1fed573280
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573260
Return data from 0x7f1fed573270
To               0x7f1fed573280
************
32
0x7f1fed573270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573260 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573280 - 0x7f1fed5732a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573280
Return data from 0x7f1fed573290
To               0x7f1fed5732a0
************
32
0x7f1fed573290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573280 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5732a0 - 0x7f1fed5732c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5732a0
Return data from 0x7f1fed5732b0
To               0x7f1fed5732c0
************
32
0x7f1fed5732b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5732a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5732c0 - 0x7f1fed5732e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5732c0
Return data from 0x7f1fed5732d0
To               0x7f1fed5732e0
************
32
0x7f1fed5732d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5732c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5732e0 - 0x7f1fed573300
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5732e0
Return data from 0x7f1fed5732f0
To               0x7f1fed573300
************
32
0x7f1fed5732f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5732e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573300 - 0x7f1fed573320
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573300
Return data from 0x7f1fed573310
To               0x7f1fed573320
************
32
0x7f1fed573310
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573300 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573320 - 0x7f1fed573340
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573320
Return data from 0x7f1fed573330
To               0x7f1fed573340
************
32
0x7f1fed573330
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573320 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573340 - 0x7f1fed573360
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573340
Return data from 0x7f1fed573350
To               0x7f1fed573360
************
32
0x7f1fed573350
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573340 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573360 - 0x7f1fed573380
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573360
Return data from 0x7f1fed573370
To               0x7f1fed573380
************
32
0x7f1fed573370
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573360 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573380 - 0x7f1fed5733a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573380
Return data from 0x7f1fed573390
To               0x7f1fed5733a0
************
32
0x7f1fed573390
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573380 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5733a0 - 0x7f1fed5733c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5733a0
Return data from 0x7f1fed5733b0
To               0x7f1fed5733c0
************
32
0x7f1fed5733b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5733a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5733c0 - 0x7f1fed5733e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5733c0
Return data from 0x7f1fed5733d0
To               0x7f1fed5733e0
************
32
0x7f1fed5733d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5733c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5733e0 - 0x7f1fed573400
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5733e0
Return data from 0x7f1fed5733f0
To               0x7f1fed573400
************
32
0x7f1fed5733f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fed567030
ptr : 0x7f1fed567020
Upgrading from 3856 to 5760, changing ptr
###########INSIDE MALLOC##########
Wanted size : 5760
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec58d000
To             0x7f1fec58f000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec58d018 => 0x7f1fec58d020

Chunk size : 5776 | 0x1690 | 0b1011010010000
Chunk head       0x7f1fec58d020
Return data from 0x7f1fec58d030
To               0x7f1fec58e6b0
************
5776
0x7f1fec58d030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fec58d030
Freeing old ptr : 0x7f1fed567030
###########INSIDE FREE##########
pointer to free
0x7f1fed567030
pointer's head
0x7f1fed567020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5733e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573400 - 0x7f1fed573420
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573400
Return data from 0x7f1fed573410
To               0x7f1fed573420
************
32
0x7f1fed573410
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573400 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573420 - 0x7f1fed573440
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573420
Return data from 0x7f1fed573430
To               0x7f1fed573440
************
32
0x7f1fed573430
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573420 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573440 - 0x7f1fed573460
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573440
Return data from 0x7f1fed573450
To               0x7f1fed573460
************
32
0x7f1fed573450
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573440 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573460 - 0x7f1fed573480
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573460
Return data from 0x7f1fed573470
To               0x7f1fed573480
************
32
0x7f1fed573470
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573460 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573480 - 0x7f1fed5734a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573480
Return data from 0x7f1fed573490
To               0x7f1fed5734a0
************
32
0x7f1fed573490
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573480 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5734a0 - 0x7f1fed5734c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5734a0
Return data from 0x7f1fed5734b0
To               0x7f1fed5734c0
************
32
0x7f1fed5734b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5734a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5734c0 - 0x7f1fed5734e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5734c0
Return data from 0x7f1fed5734d0
To               0x7f1fed5734e0
************
32
0x7f1fed5734d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5734c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5734e0 - 0x7f1fed573500
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5734e0
Return data from 0x7f1fed5734f0
To               0x7f1fed573500
************
32
0x7f1fed5734f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5734e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573500 - 0x7f1fed573520
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573500
Return data from 0x7f1fed573510
To               0x7f1fed573520
************
32
0x7f1fed573510
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573500 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573520 - 0x7f1fed573540
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573520
Return data from 0x7f1fed573530
To               0x7f1fed573540
************
32
0x7f1fed573530
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573520 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573540 - 0x7f1fed573560
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573540
Return data from 0x7f1fed573550
To               0x7f1fed573560
************
32
0x7f1fed573550
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573540 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573560 - 0x7f1fed573580
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573560
Return data from 0x7f1fed573570
To               0x7f1fed573580
************
32
0x7f1fed573570
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573560 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573580 - 0x7f1fed5735a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573580
Return data from 0x7f1fed573590
To               0x7f1fed5735a0
************
32
0x7f1fed573590
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573580 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5735a0 - 0x7f1fed5735c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5735a0
Return data from 0x7f1fed5735b0
To               0x7f1fed5735c0
************
32
0x7f1fed5735b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5735a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5735c0 - 0x7f1fed5735e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5735c0
Return data from 0x7f1fed5735d0
To               0x7f1fed5735e0
************
32
0x7f1fed5735d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5735c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5735e0 - 0x7f1fed573600
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5735e0
Return data from 0x7f1fed5735f0
To               0x7f1fed573600
************
32
0x7f1fed5735f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5735e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573600 - 0x7f1fed573620
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573600
Return data from 0x7f1fed573610
To               0x7f1fed573620
************
32
0x7f1fed573610
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573600 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573620 - 0x7f1fed573640
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573620
Return data from 0x7f1fed573630
To               0x7f1fed573640
************
32
0x7f1fed573630
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573620 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573640 - 0x7f1fed573660
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573640
Return data from 0x7f1fed573650
To               0x7f1fed573660
************
32
0x7f1fed573650
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573640 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573660 - 0x7f1fed573680
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573660
Return data from 0x7f1fed573670
To               0x7f1fed573680
************
32
0x7f1fed573670
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fec58d030
ptr : 0x7f1fec58d020
Upgrading from 5776 to 8640, changing ptr
###########INSIDE MALLOC##########
Wanted size : 8640
Page size corresponding : 12288 | 0x3000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 12288  |  0x3000
Allocated from 0x7f1fec58a000
To             0x7f1fec58d000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec58a018 => 0x7f1fec58a020

Chunk size : 8656 | 0x21d0 | 0b10000111010000
Chunk head       0x7f1fec58a020
Return data from 0x7f1fec58a030
To               0x7f1fec58c1f0
************
8656
0x7f1fec58a030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fec58a030
Freeing old ptr : 0x7f1fec58d030
###########INSIDE FREE##########
pointer to free
0x7f1fec58d030
pointer's head
0x7f1fec58d020
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573660 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573680 - 0x7f1fed5736a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573680
Return data from 0x7f1fed573690
To               0x7f1fed5736a0
************
32
0x7f1fed573690
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573680 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5736a0 - 0x7f1fed5736c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5736a0
Return data from 0x7f1fed5736b0
To               0x7f1fed5736c0
************
32
0x7f1fed5736b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5736a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5736c0 - 0x7f1fed5736e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5736c0
Return data from 0x7f1fed5736d0
To               0x7f1fed5736e0
************
32
0x7f1fed5736d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5736c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5736e0 - 0x7f1fed573700
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5736e0
Return data from 0x7f1fed5736f0
To               0x7f1fed573700
************
32
0x7f1fed5736f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5736e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573700 - 0x7f1fed573720
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573700
Return data from 0x7f1fed573710
To               0x7f1fed573720
************
32
0x7f1fed573710
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573700 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573720 - 0x7f1fed573740
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573720
Return data from 0x7f1fed573730
To               0x7f1fed573740
************
32
0x7f1fed573730
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573720 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573740 - 0x7f1fed573760
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573740
Return data from 0x7f1fed573750
To               0x7f1fed573760
************
32
0x7f1fed573750
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573740 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573760 - 0x7f1fed573780
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573760
Return data from 0x7f1fed573770
To               0x7f1fed573780
************
32
0x7f1fed573770
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573760 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573780 - 0x7f1fed5737a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573780
Return data from 0x7f1fed573790
To               0x7f1fed5737a0
************
32
0x7f1fed573790
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573780 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5737a0 - 0x7f1fed5737c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5737a0
Return data from 0x7f1fed5737b0
To               0x7f1fed5737c0
************
32
0x7f1fed5737b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5737a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5737c0 - 0x7f1fed5737e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5737c0
Return data from 0x7f1fed5737d0
To               0x7f1fed5737e0
************
32
0x7f1fed5737d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5737c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5737e0 - 0x7f1fed573800
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5737e0
Return data from 0x7f1fed5737f0
To               0x7f1fed573800
************
32
0x7f1fed5737f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5737e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573800 - 0x7f1fed573820
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573800
Return data from 0x7f1fed573810
To               0x7f1fed573820
************
32
0x7f1fed573810
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573800 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573820 - 0x7f1fed573840
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573820
Return data from 0x7f1fed573830
To               0x7f1fed573840
************
32
0x7f1fed573830
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573820 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573840 - 0x7f1fed573860
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573840
Return data from 0x7f1fed573850
To               0x7f1fed573860
************
32
0x7f1fed573850
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573840 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573860 - 0x7f1fed573880
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573860
Return data from 0x7f1fed573870
To               0x7f1fed573880
************
32
0x7f1fed573870
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573860 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573880 - 0x7f1fed5738a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573880
Return data from 0x7f1fed573890
To               0x7f1fed5738a0
************
32
0x7f1fed573890
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573880 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5738a0 - 0x7f1fed5738c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5738a0
Return data from 0x7f1fed5738b0
To               0x7f1fed5738c0
************
32
0x7f1fed5738b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5738a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5738c0 - 0x7f1fed5738e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5738c0
Return data from 0x7f1fed5738d0
To               0x7f1fed5738e0
************
32
0x7f1fed5738d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5738c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5738e0 - 0x7f1fed573900
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5738e0
Return data from 0x7f1fed5738f0
To               0x7f1fed573900
************
32
0x7f1fed5738f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5738e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573900 - 0x7f1fed573920
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573900
Return data from 0x7f1fed573910
To               0x7f1fed573920
************
32
0x7f1fed573910
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573900 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573920 - 0x7f1fed573940
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573920
Return data from 0x7f1fed573930
To               0x7f1fed573940
************
32
0x7f1fed573930
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573920 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573940 - 0x7f1fed573960
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573940
Return data from 0x7f1fed573950
To               0x7f1fed573960
************
32
0x7f1fed573950
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573940 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573960 - 0x7f1fed573980
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573960
Return data from 0x7f1fed573970
To               0x7f1fed573980
************
32
0x7f1fed573970
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573960 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573980 - 0x7f1fed5739a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573980
Return data from 0x7f1fed573990
To               0x7f1fed5739a0
************
32
0x7f1fed573990
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573980 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5739a0 - 0x7f1fed5739c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5739a0
Return data from 0x7f1fed5739b0
To               0x7f1fed5739c0
************
32
0x7f1fed5739b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5739a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5739c0 - 0x7f1fed5739e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5739c0
Return data from 0x7f1fed5739d0
To               0x7f1fed5739e0
************
32
0x7f1fed5739d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5739c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5739e0 - 0x7f1fed573a00
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5739e0
Return data from 0x7f1fed5739f0
To               0x7f1fed573a00
************
32
0x7f1fed5739f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5739e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573a00 - 0x7f1fed573a20
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573a00
Return data from 0x7f1fed573a10
To               0x7f1fed573a20
************
32
0x7f1fed573a10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573a00 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573a20 - 0x7f1fed573a40
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573a20
Return data from 0x7f1fed573a30
To               0x7f1fed573a40
************
32
0x7f1fed573a30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fec58a030
ptr : 0x7f1fec58a020
Upgrading from 8656 to 12864, changing ptr
###########INSIDE MALLOC##########
Wanted size : 12864
Page size corresponding : 16384 | 0x4000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 16384  |  0x4000
Allocated from 0x7f1fec586000
To             0x7f1fec58a000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec586018 => 0x7f1fec586020

Chunk size : 12880 | 0x3250 | 0b11001001010000
Chunk head       0x7f1fec586020
Return data from 0x7f1fec586030
To               0x7f1fec589270
************
12880
0x7f1fec586030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fec586030
Freeing old ptr : 0x7f1fec58a030
###########INSIDE FREE##########
pointer to free
0x7f1fec58a030
pointer's head
0x7f1fec58a020
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573a20 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573a40 - 0x7f1fed573a60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573a40
Return data from 0x7f1fed573a50
To               0x7f1fed573a60
************
32
0x7f1fed573a50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573a40 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573a60 - 0x7f1fed573a80
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573a60
Return data from 0x7f1fed573a70
To               0x7f1fed573a80
************
32
0x7f1fed573a70
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573a60 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573a80 - 0x7f1fed573aa0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573a80
Return data from 0x7f1fed573a90
To               0x7f1fed573aa0
************
32
0x7f1fed573a90
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573a80 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573aa0 - 0x7f1fed573ac0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573aa0
Return data from 0x7f1fed573ab0
To               0x7f1fed573ac0
************
32
0x7f1fed573ab0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573aa0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573ac0 - 0x7f1fed573ae0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573ac0
Return data from 0x7f1fed573ad0
To               0x7f1fed573ae0
************
32
0x7f1fed573ad0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 17
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573ac0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573ae0 - 0x7f1fed573b10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed573ae0
Return data from 0x7f1fed573af0
To               0x7f1fed573b10
************
48
0x7f1fed573af0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 17
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573ae0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed573b10 - 0x7f1fed573b40
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed573b10
Return data from 0x7f1fed573b20
To               0x7f1fed573b40
************
48
0x7f1fed573b20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573b10 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed573b40 - 0x7f1fed573b60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573b40 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed573b60 - 0x7f1fed573b80
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573b60
Return data from 0x7f1fed573b70
To               0x7f1fed573b80
************
32
0x7f1fed573b70
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b70
pointer's head
0x7f1fed573b60
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b50
pointer's head
0x7f1fed573b40
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 17
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573b60 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed573b80 - 0x7f1fed573bb0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed573b80
Return data from 0x7f1fed573b90
To               0x7f1fed573bb0
************
48
0x7f1fed573b90
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573b90
pointer's head
0x7f1fed573b80
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fec586030
ptr : 0x7f1fec586020
Upgrading from 12880 to 14784, changing ptr
###########INSIDE MALLOC##########
Wanted size : 14784
Page size corresponding : 16384 | 0x4000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 16384  |  0x4000
Allocated from 0x7f1fec58b000
To             0x7f1fec58f000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec58b018 => 0x7f1fec58b020

Chunk size : 14800 | 0x39d0 | 0b11100111010000
Chunk head       0x7f1fec58b020
Return data from 0x7f1fec58b030
To               0x7f1fec58e9f0
************
14800
0x7f1fec58b030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fec58b030
Freeing old ptr : 0x7f1fec586030
###########INSIDE FREE##########
pointer to free
0x7f1fec586030
pointer's head
0x7f1fec586020
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b40 - 0x7f1fed573b60
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b40
Return data from 0x7f1fed573b50
To               0x7f1fed573b60
************
32
0x7f1fed573b50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 29
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573b80 - 49 | 0x31
Found the end of chunk, chunk will be 0x7f1fed573bb0 - 0x7f1fed573be0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed573bb0
Return data from 0x7f1fed573bc0
To               0x7f1fed573be0
************
48
0x7f1fed573bc0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b60 - 0x7f1fed573b80
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed573b60
Return data from 0x7f1fed573b70
To               0x7f1fed573b80
************
32
0x7f1fed573b70
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573b80 - 0x7f1fed573bb0
Wanted size : 12 | 0xc
Got size    : 48 | 0x30
Chunk head       0x7f1fed573b80
Return data from 0x7f1fed573b90
To               0x7f1fed573bb0
************
48
0x7f1fed573b90
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573bb0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed573be0 - 0x7f1fed573c00
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573be0
Return data from 0x7f1fed573bf0
To               0x7f1fed573c00
************
32
0x7f1fed573bf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573be0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573c00 - 0x7f1fed573c20
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573c00
Return data from 0x7f1fed573c10
To               0x7f1fed573c20
************
32
0x7f1fed573c10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573c00 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573c20 - 0x7f1fed573c40
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573c20
Return data from 0x7f1fed573c30
To               0x7f1fed573c40
************
32
0x7f1fed573c30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573c20 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573c40 - 0x7f1fed573c60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573c40
Return data from 0x7f1fed573c50
To               0x7f1fed573c60
************
32
0x7f1fed573c50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE CALLOC##########
###########INSIDE MALLOC##########
Wanted size : 96
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573c40 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573c60 - 0x7f1fed573cd0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 112 | 0x70 | 0b1110000
Chunk head       0x7f1fed573c60
Return data from 0x7f1fed573c70
To               0x7f1fed573cd0
************
112
0x7f1fed573c70
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 32
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573c60 - 112 | 0x70
Found the end of chunk, chunk will be 0x7f1fed573cd0 - 0x7f1fed573d00
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed573cd0
Return data from 0x7f1fed573ce0
To               0x7f1fed573d00
************
48
0x7f1fed573ce0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573cd0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed573d00 - 0x7f1fed573d20
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573d00
Return data from 0x7f1fed573d10
To               0x7f1fed573d20
************
32
0x7f1fed573d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573d00 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573d20 - 0x7f1fed573d40
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573d20
Return data from 0x7f1fed573d30
To               0x7f1fed573d40
************
32
0x7f1fed573d30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 19
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573d20 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573d40 - 0x7f1fed573d70
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed573d40
Return data from 0x7f1fed573d50
To               0x7f1fed573d70
************
48
0x7f1fed573d50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 48
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573d40 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed573d70 - 0x7f1fed573db0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed573d70
Return data from 0x7f1fed573d80
To               0x7f1fed573db0
************
64
0x7f1fed573d80
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed573d80
pointer's head
0x7f1fed573d70
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573d70 - 65 | 0x41
Found the end of chunk, chunk will be 0x7f1fed573db0 - 0x7f1fed573dd0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573db0
Return data from 0x7f1fed573dc0
To               0x7f1fed573dd0
************
32
0x7f1fed573dc0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed573d70 - 0x7f1fed573db0
Wanted size : 15 | 0xf
Got size    : 64 | 0x40
Chunk head       0x7f1fed573d70
Return data from 0x7f1fed573d80
To               0x7f1fed573db0
************
64
0x7f1fed573d80
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573db0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573dd0 - 0x7f1fed573df0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573dd0
Return data from 0x7f1fed573de0
To               0x7f1fed573df0
************
32
0x7f1fed573de0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573dd0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573df0 - 0x7f1fed573e10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573df0
Return data from 0x7f1fed573e00
To               0x7f1fed573e10
************
32
0x7f1fed573e00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 480
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecaca530 - 0x7f1fecaca7a0
Wanted size : 480 | 0x1e0
Got size    : 624 | 0x270
Chunk head       0x7f1fecaca530
Return data from 0x7f1fecaca540
To               0x7f1fecaca7a0
************
624
0x7f1fecaca540
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573df0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573e10 - 0x7f1fed573e30
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573e10
Return data from 0x7f1fed573e20
To               0x7f1fed573e30
************
32
0x7f1fed573e20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573e10 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573e30 - 0x7f1fed573e50
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573e30
Return data from 0x7f1fed573e40
To               0x7f1fed573e50
************
32
0x7f1fed573e40
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573e30 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573e50 - 0x7f1fed573e70
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573e50
Return data from 0x7f1fed573e60
To               0x7f1fed573e70
************
32
0x7f1fed573e60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573e50 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573e70 - 0x7f1fed573e90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573e70
Return data from 0x7f1fed573e80
To               0x7f1fed573e90
************
32
0x7f1fed573e80
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573e70 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573e90 - 0x7f1fed573eb0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573e90
Return data from 0x7f1fed573ea0
To               0x7f1fed573eb0
************
32
0x7f1fed573ea0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573e90 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573eb0 - 0x7f1fed573ed0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573eb0
Return data from 0x7f1fed573ec0
To               0x7f1fed573ed0
************
32
0x7f1fed573ec0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573eb0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573ed0 - 0x7f1fed573ef0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573ed0
Return data from 0x7f1fed573ee0
To               0x7f1fed573ef0
************
32
0x7f1fed573ee0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573ed0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573ef0 - 0x7f1fed573f10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573ef0
Return data from 0x7f1fed573f00
To               0x7f1fed573f10
************
32
0x7f1fed573f00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573ef0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573f10 - 0x7f1fed573f30
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573f10
Return data from 0x7f1fed573f20
To               0x7f1fed573f30
************
32
0x7f1fed573f20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573f10 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573f30 - 0x7f1fed573f50
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573f30
Return data from 0x7f1fed573f40
To               0x7f1fed573f50
************
32
0x7f1fed573f40
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573f30 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573f50 - 0x7f1fed573f70
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573f50
Return data from 0x7f1fed573f60
To               0x7f1fed573f70
************
32
0x7f1fed573f60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573f50 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573f70 - 0x7f1fed573f90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573f70
Return data from 0x7f1fed573f80
To               0x7f1fed573f90
************
32
0x7f1fed573f80
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573f70 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573f90 - 0x7f1fed573fb0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573f90
Return data from 0x7f1fed573fa0
To               0x7f1fed573fb0
************
32
0x7f1fed573fa0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573f90 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573fb0 - 0x7f1fed573fd0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573fb0
Return data from 0x7f1fed573fc0
To               0x7f1fed573fd0
************
32
0x7f1fed573fc0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573fb0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573fd0 - 0x7f1fed573ff0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573fd0
Return data from 0x7f1fed573fe0
To               0x7f1fed573ff0
************
32
0x7f1fed573fe0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573fd0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed573ff0 - 0x7f1fed574010
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed573ff0
Return data from 0x7f1fed574000
To               0x7f1fed574010
************
32
0x7f1fed574000
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed573ff0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574010 - 0x7f1fed574030
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574010
Return data from 0x7f1fed574020
To               0x7f1fed574030
************
32
0x7f1fed574020
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574010 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574030 - 0x7f1fed574050
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574030
Return data from 0x7f1fed574040
To               0x7f1fed574050
************
32
0x7f1fed574040
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574030 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574050 - 0x7f1fed574070
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574050
Return data from 0x7f1fed574060
To               0x7f1fed574070
************
32
0x7f1fed574060
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574050 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574070 - 0x7f1fed574090
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574070
Return data from 0x7f1fed574080
To               0x7f1fed574090
************
32
0x7f1fed574080
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 960
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecacad10 - 768 | 0x300
Found the end of chunk, chunk will be 0x7f1fecacb010 - 0x7f1fecacb3e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 976 | 0x3d0 | 0b1111010000
Chunk head       0x7f1fecacb010
Return data from 0x7f1fecacb020
To               0x7f1fecacb3e0
************
976
0x7f1fecacb020
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecaca540
pointer's head
0x7f1fecaca530
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574070 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574090 - 0x7f1fed5740b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574090
Return data from 0x7f1fed5740a0
To               0x7f1fed5740b0
************
32
0x7f1fed5740a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574090 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5740b0 - 0x7f1fed5740d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5740b0
Return data from 0x7f1fed5740c0
To               0x7f1fed5740d0
************
32
0x7f1fed5740c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5740b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5740d0 - 0x7f1fed5740f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5740d0
Return data from 0x7f1fed5740e0
To               0x7f1fed5740f0
************
32
0x7f1fed5740e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5740d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5740f0 - 0x7f1fed574110
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5740f0
Return data from 0x7f1fed574100
To               0x7f1fed574110
************
32
0x7f1fed574100
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5740f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574110 - 0x7f1fed574130
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574110
Return data from 0x7f1fed574120
To               0x7f1fed574130
************
32
0x7f1fed574120
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574110 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574130 - 0x7f1fed574150
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574130
Return data from 0x7f1fed574140
To               0x7f1fed574150
************
32
0x7f1fed574140
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574130 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574150 - 0x7f1fed574170
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574150
Return data from 0x7f1fed574160
To               0x7f1fed574170
************
32
0x7f1fed574160
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574150 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574170 - 0x7f1fed574190
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574170
Return data from 0x7f1fed574180
To               0x7f1fed574190
************
32
0x7f1fed574180
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574170 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574190 - 0x7f1fed5741b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574190
Return data from 0x7f1fed5741a0
To               0x7f1fed5741b0
************
32
0x7f1fed5741a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574190 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5741b0 - 0x7f1fed5741d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5741b0
Return data from 0x7f1fed5741c0
To               0x7f1fed5741d0
************
32
0x7f1fed5741c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5741b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5741d0 - 0x7f1fed5741f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5741d0
Return data from 0x7f1fed5741e0
To               0x7f1fed5741f0
************
32
0x7f1fed5741e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5741d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5741f0 - 0x7f1fed574210
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5741f0
Return data from 0x7f1fed574200
To               0x7f1fed574210
************
32
0x7f1fed574200
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5741f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574210 - 0x7f1fed574230
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574210
Return data from 0x7f1fed574220
To               0x7f1fed574230
************
32
0x7f1fed574220
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574210 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574230 - 0x7f1fed574250
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574230
Return data from 0x7f1fed574240
To               0x7f1fed574250
************
32
0x7f1fed574240
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574230 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574250 - 0x7f1fed574270
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574250
Return data from 0x7f1fed574260
To               0x7f1fed574270
************
32
0x7f1fed574260
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574250 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574270 - 0x7f1fed574290
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574270
Return data from 0x7f1fed574280
To               0x7f1fed574290
************
32
0x7f1fed574280
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574270 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574290 - 0x7f1fed5742b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574290
Return data from 0x7f1fed5742a0
To               0x7f1fed5742b0
************
32
0x7f1fed5742a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574290 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5742b0 - 0x7f1fed5742d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5742b0
Return data from 0x7f1fed5742c0
To               0x7f1fed5742d0
************
32
0x7f1fed5742c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5742b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5742d0 - 0x7f1fed5742f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5742d0
Return data from 0x7f1fed5742e0
To               0x7f1fed5742f0
************
32
0x7f1fed5742e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5742d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5742f0 - 0x7f1fed574310
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5742f0
Return data from 0x7f1fed574300
To               0x7f1fed574310
************
32
0x7f1fed574300
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1440
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fed567000
To             0x7f1fed568000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed567018 => 0x7f1fed567020

Chunk size : 1456 | 0x5b0 | 0b10110110000
Chunk head       0x7f1fed567020
Return data from 0x7f1fed567030
To               0x7f1fed5675d0
************
1456
0x7f1fed567030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecacb020
pointer's head
0x7f1fecacb010
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5742f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574310 - 0x7f1fed574330
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574310
Return data from 0x7f1fed574320
To               0x7f1fed574330
************
32
0x7f1fed574320
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574310 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574330 - 0x7f1fed574350
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574330
Return data from 0x7f1fed574340
To               0x7f1fed574350
************
32
0x7f1fed574340
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574330 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574350 - 0x7f1fed574370
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574350
Return data from 0x7f1fed574360
To               0x7f1fed574370
************
32
0x7f1fed574360
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574350 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574370 - 0x7f1fed574390
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574370
Return data from 0x7f1fed574380
To               0x7f1fed574390
************
32
0x7f1fed574380
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574370 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574390 - 0x7f1fed5743b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574390
Return data from 0x7f1fed5743a0
To               0x7f1fed5743b0
************
32
0x7f1fed5743a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574390 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5743b0 - 0x7f1fed5743d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5743b0
Return data from 0x7f1fed5743c0
To               0x7f1fed5743d0
************
32
0x7f1fed5743c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5743b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5743d0 - 0x7f1fed5743f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5743d0
Return data from 0x7f1fed5743e0
To               0x7f1fed5743f0
************
32
0x7f1fed5743e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5743d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5743f0 - 0x7f1fed574410
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5743f0
Return data from 0x7f1fed574400
To               0x7f1fed574410
************
32
0x7f1fed574400
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5743f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574410 - 0x7f1fed574430
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574410
Return data from 0x7f1fed574420
To               0x7f1fed574430
************
32
0x7f1fed574420
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574410 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574430 - 0x7f1fed574450
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574430
Return data from 0x7f1fed574440
To               0x7f1fed574450
************
32
0x7f1fed574440
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574430 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574450 - 0x7f1fed574470
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574450
Return data from 0x7f1fed574460
To               0x7f1fed574470
************
32
0x7f1fed574460
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574450 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574470 - 0x7f1fed574490
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574470
Return data from 0x7f1fed574480
To               0x7f1fed574490
************
32
0x7f1fed574480
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574470 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574490 - 0x7f1fed5744b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574490
Return data from 0x7f1fed5744a0
To               0x7f1fed5744b0
************
32
0x7f1fed5744a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574490 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5744b0 - 0x7f1fed5744d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5744b0
Return data from 0x7f1fed5744c0
To               0x7f1fed5744d0
************
32
0x7f1fed5744c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5744b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5744d0 - 0x7f1fed5744f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5744d0
Return data from 0x7f1fed5744e0
To               0x7f1fed5744f0
************
32
0x7f1fed5744e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5744d0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5744f0 - 0x7f1fed574510
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5744f0
Return data from 0x7f1fed574500
To               0x7f1fed574510
************
32
0x7f1fed574500
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5744f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574510 - 0x7f1fed574530
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574510
Return data from 0x7f1fed574520
To               0x7f1fed574530
************
32
0x7f1fed574520
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE CALLOC##########
###########INSIDE MALLOC##########
Wanted size : 760
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecacb010 - 977 | 0x3d1
Found the end of chunk, chunk will be 0x7f1fecacb3e0 - 0x7f1fecacb6f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 784 | 0x310 | 0b1100010000
Chunk head       0x7f1fecacb3e0
Return data from 0x7f1fecacb3f0
To               0x7f1fecacb6f0
************
784
0x7f1fecacb3f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 34
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574510 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574530 - 0x7f1fed574570
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed574530
Return data from 0x7f1fed574540
To               0x7f1fed574570
************
64
0x7f1fed574540
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 22
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574530 - 64 | 0x40
Found the end of chunk, chunk will be 0x7f1fed574570 - 0x7f1fed5745a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed574570
Return data from 0x7f1fed574580
To               0x7f1fed5745a0
************
48
0x7f1fed574580
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 103
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574570 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed5745a0 - 0x7f1fed574620
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 128 | 0x80 | 0b10000000
Chunk head       0x7f1fed5745a0
Return data from 0x7f1fed5745b0
To               0x7f1fed574620
************
128
0x7f1fed5745b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE CALLOC##########
###########INSIDE MALLOC##########
Wanted size : 48
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5745a0 - 128 | 0x80
Found the end of chunk, chunk will be 0x7f1fed574620 - 0x7f1fed574660
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed574620
Return data from 0x7f1fed574630
To               0x7f1fed574660
************
64
0x7f1fed574630
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE CALLOC##########
###########INSIDE MALLOC##########
Wanted size : 864
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecacb010 - 0x7f1fecacb3e0
Wanted size : 864 | 0x360
Got size    : 976 | 0x3d0
Chunk head       0x7f1fecacb010
Return data from 0x7f1fecacb020
To               0x7f1fecacb3e0
************
976
0x7f1fecacb020
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecacb020
pointer's head
0x7f1fecacb010
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 472
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecaca530 - 0x7f1fecaca7a0
Wanted size : 472 | 0x1d8
Got size    : 624 | 0x270
Chunk head       0x7f1fecaca530
Return data from 0x7f1fecaca540
To               0x7f1fecaca7a0
************
624
0x7f1fecaca540
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec589000
To             0x7f1fec58b000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec589018 => 0x7f1fec589020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fec589020
Return data from 0x7f1fec589030
To               0x7f1fec58a030
************
4112
0x7f1fec589030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1664
Page size corresponding : 4096 | 0x1000
page : 0x7f1fed567000 - 0x7f1fed568000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed567020 - 1456 | 0x5b0
Found the end of chunk, chunk will be 0x7f1fed5675d0 - 0x7f1fed567c60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 1680 | 0x690 | 0b11010010000
Chunk head       0x7f1fed5675d0
Return data from 0x7f1fed5675e0
To               0x7f1fed567c60
************
1680
0x7f1fed5675e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE CALLOC##########
###########INSIDE MALLOC##########
Wanted size : 44
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574620 - 64 | 0x40
Found the end of chunk, chunk will be 0x7f1fed574660 - 0x7f1fed5746a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed574660
Return data from 0x7f1fed574670
To               0x7f1fed5746a0
************
64
0x7f1fed574670
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE CALLOC##########
###########INSIDE MALLOC##########
Wanted size : 156
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574660 - 64 | 0x40
Found the end of chunk, chunk will be 0x7f1fed5746a0 - 0x7f1fed574750
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 176 | 0xb0 | 0b10110000
Chunk head       0x7f1fed5746a0
Return data from 0x7f1fed5746b0
To               0x7f1fed574750
************
176
0x7f1fed5746b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE CALLOC##########
###########INSIDE MALLOC##########
Wanted size : 3312
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fed566000
To             0x7f1fed567000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed566018 => 0x7f1fed566020

Chunk size : 3328 | 0xd00 | 0b110100000000
Chunk head       0x7f1fed566020
Return data from 0x7f1fed566030
To               0x7f1fed566d20
************
3328
0x7f1fed566030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fed574670
ptr : 0x7f1fed574660
Downgrading, no need to change ptr
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fed5746b0
ptr : 0x7f1fed5746a0
Downgrading, no need to change ptr
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fed566030
ptr : 0x7f1fed566020
Upgrading from 3328 to 3904, changing ptr
###########INSIDE MALLOC##########
Wanted size : 3904
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fec588000
To             0x7f1fec589000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec588018 => 0x7f1fec588020

Chunk size : 3920 | 0xf50 | 0b111101010000
Chunk head       0x7f1fec588020
Return data from 0x7f1fec588030
To               0x7f1fec588f70
************
3920
0x7f1fec588030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fec588030
Freeing old ptr : 0x7f1fed566030
###########INSIDE FREE##########
pointer to free
0x7f1fed566030
pointer's head
0x7f1fed566020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 940
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecacb010 - 0x7f1fecacb3e0
Wanted size : 940 | 0x3ac
Got size    : 976 | 0x3d0
Chunk head       0x7f1fecacb010
Return data from 0x7f1fecacb020
To               0x7f1fecacb3e0
************
976
0x7f1fecacb020
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE CALLOC##########
###########INSIDE MALLOC##########
Wanted size : 608
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecacaa10 - 0x7f1fecacad10
Wanted size : 608 | 0x260
Got size    : 768 | 0x300
Chunk head       0x7f1fecacaa10
Return data from 0x7f1fecacaa20
To               0x7f1fecacad10
************
768
0x7f1fecacaa20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fec589030
pointer's head
0x7f1fec589020
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecaca540
pointer's head
0x7f1fecaca530
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 22
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5746a0 - 176 | 0xb0
Found the end of chunk, chunk will be 0x7f1fed574750 - 0x7f1fed574780
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed574750
Return data from 0x7f1fed574760
To               0x7f1fed574780
************
48
0x7f1fed574760
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574760
pointer's head
0x7f1fed574750
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 46
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574750 - 49 | 0x31
Found the end of chunk, chunk will be 0x7f1fed574780 - 0x7f1fed5747c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed574780
Return data from 0x7f1fed574790
To               0x7f1fed5747c0
************
64
0x7f1fed574790
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 3904
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fed566000
To             0x7f1fed567000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fed566018 => 0x7f1fed566020

Chunk size : 3920 | 0xf50 | 0b111101010000
Chunk head       0x7f1fed566020
Return data from 0x7f1fed566030
To               0x7f1fed566f70
************
3920
0x7f1fed566030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 78
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574780 - 64 | 0x40
Found the end of chunk, chunk will be 0x7f1fed5747c0 - 0x7f1fed574820
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 96 | 0x60 | 0b1100000
Chunk head       0x7f1fed5747c0
Return data from 0x7f1fed5747d0
To               0x7f1fed574820
************
96
0x7f1fed5747d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 608
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecaca530 - 0x7f1fecaca7a0
Wanted size : 608 | 0x260
Got size    : 624 | 0x270
Chunk head       0x7f1fecaca530
Return data from 0x7f1fecaca540
To               0x7f1fecaca7a0
************
624
0x7f1fecaca540
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574750 - 0x7f1fed574780
Wanted size : 15 | 0xf
Got size    : 48 | 0x30
Chunk head       0x7f1fed574750
Return data from 0x7f1fed574760
To               0x7f1fed574780
************
48
0x7f1fed574760
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574520
pointer's head
0x7f1fed574510
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 94
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5747c0 - 96 | 0x60
Found the end of chunk, chunk will be 0x7f1fed574820 - 0x7f1fed574890
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 112 | 0x70 | 0b1110000
Chunk head       0x7f1fed574820
Return data from 0x7f1fed574830
To               0x7f1fed574890
************
112
0x7f1fed574830
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE CALLOC##########
###########INSIDE MALLOC##########
Wanted size : 168
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574820 - 112 | 0x70
Found the end of chunk, chunk will be 0x7f1fed574890 - 0x7f1fed574950
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 192 | 0xc0 | 0b11000000
Chunk head       0x7f1fed574890
Return data from 0x7f1fed5748a0
To               0x7f1fed574950
************
192
0x7f1fed5748a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 93
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574890 - 192 | 0xc0
Found the end of chunk, chunk will be 0x7f1fed574950 - 0x7f1fed5749c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 112 | 0x70 | 0b1110000
Chunk head       0x7f1fed574950
Return data from 0x7f1fed574960
To               0x7f1fed5749c0
************
112
0x7f1fed574960
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 24
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574950 - 112 | 0x70
Found the end of chunk, chunk will be 0x7f1fed5749c0 - 0x7f1fed5749f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5749c0
Return data from 0x7f1fed5749d0
To               0x7f1fed5749f0
************
48
0x7f1fed5749d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 2
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574510 - 0x7f1fed574530
Wanted size : 2 | 0x2
Got size    : 32 | 0x20
Chunk head       0x7f1fed574510
Return data from 0x7f1fed574520
To               0x7f1fed574530
************
32
0x7f1fed574520
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fed574520
ptr : 0x7f1fed574510
Downgrading, no need to change ptr
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fed574520
ptr : 0x7f1fed574510
Downgrading, no need to change ptr
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5749c0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed5749f0 - 0x7f1fed574a10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5749f0
Return data from 0x7f1fed574a00
To               0x7f1fed574a10
************
32
0x7f1fed574a00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5749f0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574a10 - 0x7f1fed574a30
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574a10
Return data from 0x7f1fed574a20
To               0x7f1fed574a30
************
32
0x7f1fed574a20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574a10 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574a30 - 0x7f1fed574a50
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574a30
Return data from 0x7f1fed574a40
To               0x7f1fed574a50
************
32
0x7f1fed574a40
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574a40
pointer's head
0x7f1fed574a30
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574a00
pointer's head
0x7f1fed5749f0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE CALLOC##########
###########INSIDE MALLOC##########
Wanted size : 7952
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec589000
To             0x7f1fec58b000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec589018 => 0x7f1fec589020

Chunk size : 7968 | 0x1f20 | 0b1111100100000
Chunk head       0x7f1fec589020
Return data from 0x7f1fec589030
To               0x7f1fec58af40
************
7968
0x7f1fec589030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5749f0 - 0x7f1fed574a10
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed5749f0
Return data from 0x7f1fed574a00
To               0x7f1fed574a10
************
32
0x7f1fed574a00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574a30 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed574a50 - 0x7f1fed574a70
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574a50
Return data from 0x7f1fed574a60
To               0x7f1fed574a70
************
32
0x7f1fed574a60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574a30 - 0x7f1fed574a50
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574a30
Return data from 0x7f1fed574a40
To               0x7f1fed574a50
************
32
0x7f1fed574a40
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574a50 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574a70 - 0x7f1fed574a90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574a70
Return data from 0x7f1fed574a80
To               0x7f1fed574a90
************
32
0x7f1fed574a80
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1920
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fec587000
To             0x7f1fec588000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec587018 => 0x7f1fec587020

Chunk size : 1936 | 0x790 | 0b11110010000
Chunk head       0x7f1fec587020
Return data from 0x7f1fec587030
To               0x7f1fec5877b0
************
1936
0x7f1fec587030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed567030
pointer's head
0x7f1fed567020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 2
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574a70 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574a90 - 0x7f1fed574ab0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574a90
Return data from 0x7f1fed574aa0
To               0x7f1fed574ab0
************
32
0x7f1fed574aa0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574a90 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574ab0 - 0x7f1fed574ad0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574ab0
Return data from 0x7f1fed574ac0
To               0x7f1fed574ad0
************
32
0x7f1fed574ac0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574ab0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574ad0 - 0x7f1fed574af0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574ad0
Return data from 0x7f1fed574ae0
To               0x7f1fed574af0
************
32
0x7f1fed574ae0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574ad0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574af0 - 0x7f1fed574b10
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574af0
Return data from 0x7f1fed574b00
To               0x7f1fed574b10
************
32
0x7f1fed574b00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574af0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574b10 - 0x7f1fed574b30
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574b10
Return data from 0x7f1fed574b20
To               0x7f1fed574b30
************
32
0x7f1fed574b20
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 2
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574b10 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574b30 - 0x7f1fed574b50
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574b30
Return data from 0x7f1fed574b40
To               0x7f1fed574b50
************
32
0x7f1fed574b40
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574aa0
pointer's head
0x7f1fed574a90
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574a90 - 0x7f1fed574ab0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574a90
Return data from 0x7f1fed574aa0
To               0x7f1fed574ab0
************
32
0x7f1fed574aa0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574b30 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574b50 - 0x7f1fed574b70
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574b50
Return data from 0x7f1fed574b60
To               0x7f1fed574b70
************
32
0x7f1fed574b60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574b50 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574b70 - 0x7f1fed574b90
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574b70
Return data from 0x7f1fed574b80
To               0x7f1fed574b90
************
32
0x7f1fed574b80
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574b70 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574b90 - 0x7f1fed574bb0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574b90
Return data from 0x7f1fed574ba0
To               0x7f1fed574bb0
************
32
0x7f1fed574ba0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecac9da0
pointer's head
0x7f1fecac9d90
Still used blocks, will not remove page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5824
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec585000
To             0x7f1fec587000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec585018 => 0x7f1fec585020

Chunk size : 5840 | 0x16d0 | 0b1011011010000
Chunk head       0x7f1fec585020
Return data from 0x7f1fec585030
To               0x7f1fec5866f0
************
5840
0x7f1fec585030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 23296
Page size corresponding : 24576 | 0x6000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 24576  |  0x6000
Allocated from 0x7f1fec57f000
To             0x7f1fec585000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec57f018 => 0x7f1fec57f020

Chunk size : 23312 | 0x5b10 | 0b101101100010000
Chunk head       0x7f1fec57f020
Return data from 0x7f1fec57f030
To               0x7f1fec584b30
************
23312
0x7f1fec57f030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 23296
Page size corresponding : 24576 | 0x6000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 24576  |  0x6000
Allocated from 0x7f1fec579000
To             0x7f1fec57f000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec579018 => 0x7f1fec579020

Chunk size : 23312 | 0x5b10 | 0b101101100010000
Chunk head       0x7f1fec579020
Return data from 0x7f1fec579030
To               0x7f1fec57eb30
************
23312
0x7f1fec579030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 23296
Page size corresponding : 24576 | 0x6000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 24576  |  0x6000
Allocated from 0x7f1fec573000
To             0x7f1fec579000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec573018 => 0x7f1fec573020

Chunk size : 23312 | 0x5b10 | 0b101101100010000
Chunk head       0x7f1fec573020
Return data from 0x7f1fec573030
To               0x7f1fec578b30
************
23312
0x7f1fec573030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11648
Page size corresponding : 12288 | 0x3000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 12288  |  0x3000
Allocated from 0x7f1fec570000
To             0x7f1fec573000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec570018 => 0x7f1fec570020

Chunk size : 11664 | 0x2d90 | 0b10110110010000
Chunk head       0x7f1fec570020
Return data from 0x7f1fec570030
To               0x7f1fec572db0
************
11664
0x7f1fec570030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 220
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecacb3e0 - 784 | 0x310
Found the end of chunk, chunk will be 0x7f1fecacb6f0 - 0x7f1fecacb7e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 240 | 0xf0 | 0b11110000
Chunk head       0x7f1fecacb6f0
Return data from 0x7f1fecacb700
To               0x7f1fecacb7e0
************
240
0x7f1fecacb700
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 55
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574b90 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574bb0 - 0x7f1fed574c00
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 80 | 0x50 | 0b1010000
Chunk head       0x7f1fed574bb0
Return data from 0x7f1fed574bc0
To               0x7f1fed574c00
************
80
0x7f1fed574bc0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 208
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574bb0 - 80 | 0x50
Found the end of chunk, chunk will be 0x7f1fed574c00 - 0x7f1fed574ce0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 224 | 0xe0 | 0b11100000
Chunk head       0x7f1fed574c00
Return data from 0x7f1fed574c10
To               0x7f1fed574ce0
************
224
0x7f1fed574c10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11440
Page size corresponding : 12288 | 0x3000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 12288  |  0x3000
Allocated from 0x7f1fec56d000
To             0x7f1fec570000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec56d018 => 0x7f1fec56d020

Chunk size : 11456 | 0x2cc0 | 0b10110011000000
Chunk head       0x7f1fec56d020
Return data from 0x7f1fec56d030
To               0x7f1fec56fce0
************
11456
0x7f1fec56d030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11440
Page size corresponding : 12288 | 0x3000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 12288  |  0x3000
Allocated from 0x7f1fec56a000
To             0x7f1fec56d000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec56a018 => 0x7f1fec56a020

Chunk size : 11456 | 0x2cc0 | 0b10110011000000
Chunk head       0x7f1fec56a020
Return data from 0x7f1fec56a030
To               0x7f1fec56cce0
************
11456
0x7f1fec56a030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5720
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec568000
To             0x7f1fec56a000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec568018 => 0x7f1fec568020

Chunk size : 5744 | 0x1670 | 0b1011001110000
Chunk head       0x7f1fec568020
Return data from 0x7f1fec568030
To               0x7f1fec569690
************
5744
0x7f1fec568030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1320
Page size corresponding : 4096 | 0x1000
page : 0x7f1fed567000 - 0x7f1fed568000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed567020 - 0x7f1fed5675d0
Wanted size : 1320 | 0x528
Got size    : 1456 | 0x5b0
Chunk head       0x7f1fed567020
Return data from 0x7f1fed567030
To               0x7f1fed5675d0
************
1456
0x7f1fed567030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 560
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecacb6f0 - 240 | 0xf0
Found the end of chunk, chunk will be 0x7f1fecacb7e0 - 0x7f1fecacba20
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 576 | 0x240 | 0b1001000000
Chunk head       0x7f1fecacb7e0
Return data from 0x7f1fecacb7f0
To               0x7f1fecacba20
************
576
0x7f1fecacb7f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecacb7f0
pointer's head
0x7f1fecacb7e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574c00 - 224 | 0xe0
Found the end of chunk, chunk will be 0x7f1fed574ce0 - 0x7f1fed574d00
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574ce0 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed574d00 - 0x7f1fed574d20
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574d00 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed574d20 - 0x7f1fed574d40
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574d20
Return data from 0x7f1fed574d30
To               0x7f1fed574d40
************
32
0x7f1fed574d30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d30
pointer's head
0x7f1fed574d20
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574d20 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed574d40 - 0x7f1fed574d60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574d40
Return data from 0x7f1fed574d50
To               0x7f1fed574d60
************
32
0x7f1fed574d50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d20 - 0x7f1fed574d40
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d20
Return data from 0x7f1fed574d30
To               0x7f1fed574d40
************
32
0x7f1fed574d30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
No ptr, just allocating
###########INSIDE MALLOC##########
Wanted size : 280
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecacb7e0 - 577 | 0x241
Found the end of chunk, chunk will be 0x7f1fecacba20 - 0x7f1fecacbb50
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 304 | 0x130 | 0b100110000
Chunk head       0x7f1fecacba20
Return data from 0x7f1fecacba30
To               0x7f1fecacbb50
************
304
0x7f1fecacba30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574d40 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574d60 - 0x7f1fed574d80
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574d60
Return data from 0x7f1fed574d70
To               0x7f1fed574d80
************
32
0x7f1fed574d70
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574d60 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574d80 - 0x7f1fed574da0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574d80
Return data from 0x7f1fed574d90
To               0x7f1fed574da0
************
32
0x7f1fed574d90
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574d80 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574da0 - 0x7f1fed574dc0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574da0
Return data from 0x7f1fed574db0
To               0x7f1fed574dc0
************
32
0x7f1fed574db0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574d10
pointer's head
0x7f1fed574d00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574cf0
pointer's head
0x7f1fed574ce0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574ce0 - 0x7f1fed574d00
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574ce0
Return data from 0x7f1fed574cf0
To               0x7f1fed574d00
************
32
0x7f1fed574cf0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574d00 - 0x7f1fed574d20
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574d00
Return data from 0x7f1fed574d10
To               0x7f1fed574d20
************
32
0x7f1fed574d10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574da0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574dc0 - 0x7f1fed574de0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574dc0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574de0 - 0x7f1fed574e00
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574de0 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed574e00 - 0x7f1fed574e20
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574e00
Return data from 0x7f1fed574e10
To               0x7f1fed574e20
************
32
0x7f1fed574e10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574e10
pointer's head
0x7f1fed574e00
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574e00 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed574e20 - 0x7f1fed574e40
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574e20
Return data from 0x7f1fed574e30
To               0x7f1fed574e40
************
32
0x7f1fed574e30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574e00 - 0x7f1fed574e20
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574e00
Return data from 0x7f1fed574e10
To               0x7f1fed574e20
************
32
0x7f1fed574e10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574e20 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574e40 - 0x7f1fed574e60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574e40
Return data from 0x7f1fed574e50
To               0x7f1fed574e60
************
32
0x7f1fed574e50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574e40 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574e60 - 0x7f1fed574e80
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574e60
Return data from 0x7f1fed574e70
To               0x7f1fed574e80
************
32
0x7f1fed574e70
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fecacba30
ptr : 0x7f1fecacba20
Upgrading from 304 to 560, changing ptr
###########INSIDE MALLOC##########
Wanted size : 560
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecacb7e0 - 0x7f1fecacba20
Wanted size : 560 | 0x230
Got size    : 576 | 0x240
Chunk head       0x7f1fecacb7e0
Return data from 0x7f1fecacb7f0
To               0x7f1fecacba20
************
576
0x7f1fecacb7f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fecacb7f0
Freeing old ptr : 0x7f1fecacba30
###########INSIDE FREE##########
pointer to free
0x7f1fecacba30
pointer's head
0x7f1fecacba20
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574e60 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574e80 - 0x7f1fed574ea0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574e80
Return data from 0x7f1fed574e90
To               0x7f1fed574ea0
************
32
0x7f1fed574e90
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574e80 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574ea0 - 0x7f1fed574ec0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574ea0
Return data from 0x7f1fed574eb0
To               0x7f1fed574ec0
************
32
0x7f1fed574eb0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574ea0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574ec0 - 0x7f1fed574ee0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574ec0
Return data from 0x7f1fed574ed0
To               0x7f1fed574ee0
************
32
0x7f1fed574ed0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574ec0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574ee0 - 0x7f1fed574f00
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574ee0
Return data from 0x7f1fed574ef0
To               0x7f1fed574f00
************
32
0x7f1fed574ef0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574ee0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574f00 - 0x7f1fed574f20
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574f00
Return data from 0x7f1fed574f10
To               0x7f1fed574f20
************
32
0x7f1fed574f10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574f00 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574f20 - 0x7f1fed574f40
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574f20
Return data from 0x7f1fed574f30
To               0x7f1fed574f40
************
32
0x7f1fed574f30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574f20 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574f40 - 0x7f1fed574f60
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574f40
Return data from 0x7f1fed574f50
To               0x7f1fed574f60
************
32
0x7f1fed574f50
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574f40 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574f60 - 0x7f1fed574f80
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574f60
Return data from 0x7f1fed574f70
To               0x7f1fed574f80
************
32
0x7f1fed574f70
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fecacb7f0
ptr : 0x7f1fecacb7e0
Upgrading from 576 to 840, changing ptr
###########INSIDE MALLOC##########
Wanted size : 840
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecacba20 - 305 | 0x131
Found the end of chunk, chunk will be 0x7f1fecacbb50 - 0x7f1fecacbeb0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 864 | 0x360 | 0b1101100000
Chunk head       0x7f1fecacbb50
Return data from 0x7f1fecacbb60
To               0x7f1fecacbeb0
************
864
0x7f1fecacbb60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fecacbb60
Freeing old ptr : 0x7f1fecacb7f0
###########INSIDE FREE##########
pointer to free
0x7f1fecacb7f0
pointer's head
0x7f1fecacb7e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574f60 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574f80 - 0x7f1fed574fa0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574f80
Return data from 0x7f1fed574f90
To               0x7f1fed574fa0
************
32
0x7f1fed574f90
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574f80 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574fa0 - 0x7f1fed574fc0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574fa0
Return data from 0x7f1fed574fb0
To               0x7f1fed574fc0
************
32
0x7f1fed574fb0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574fa0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574fc0 - 0x7f1fed574fe0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574fc0
Return data from 0x7f1fed574fd0
To               0x7f1fed574fe0
************
32
0x7f1fed574fd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574fc0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed574fe0 - 0x7f1fed575000
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed574fe0
Return data from 0x7f1fed574ff0
To               0x7f1fed575000
************
32
0x7f1fed574ff0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed574fe0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575000 - 0x7f1fed575020
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575000
Return data from 0x7f1fed575010
To               0x7f1fed575020
************
32
0x7f1fed575010
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575000 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575020 - 0x7f1fed575040
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575020
Return data from 0x7f1fed575030
To               0x7f1fed575040
************
32
0x7f1fed575030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575020 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575040 - 0x7f1fed575060
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575040
Return data from 0x7f1fed575050
To               0x7f1fed575060
************
32
0x7f1fed575050
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575040 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575060 - 0x7f1fed575080
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575060
Return data from 0x7f1fed575070
To               0x7f1fed575080
************
32
0x7f1fed575070
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575060 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575080 - 0x7f1fed5750a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575080
Return data from 0x7f1fed575090
To               0x7f1fed5750a0
************
32
0x7f1fed575090
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575080 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5750a0 - 0x7f1fed5750c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5750a0
Return data from 0x7f1fed5750b0
To               0x7f1fed5750c0
************
32
0x7f1fed5750b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5750a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5750c0 - 0x7f1fed5750e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5750c0
Return data from 0x7f1fed5750d0
To               0x7f1fed5750e0
************
32
0x7f1fed5750d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5750c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5750e0 - 0x7f1fed575100
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5750e0
Return data from 0x7f1fed5750f0
To               0x7f1fed575100
************
32
0x7f1fed5750f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5750e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575100 - 0x7f1fed575120
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575100
Return data from 0x7f1fed575110
To               0x7f1fed575120
************
32
0x7f1fed575110
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fecacbb60
ptr : 0x7f1fecacbb50
Upgrading from 864 to 1240, changing ptr
###########INSIDE MALLOC##########
Wanted size : 1240
Page size corresponding : 4096 | 0x1000
page : 0x7f1fec587000 - 0x7f1fec588000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fec587020 - 1936 | 0x790
Found the end of chunk, chunk will be 0x7f1fec5877b0 - 0x7f1fec587ca0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 1264 | 0x4f0 | 0b10011110000
Chunk head       0x7f1fec5877b0
Return data from 0x7f1fec5877c0
To               0x7f1fec587ca0
************
1264
0x7f1fec5877c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fec5877c0
Freeing old ptr : 0x7f1fecacbb60
###########INSIDE FREE##########
pointer to free
0x7f1fecacbb60
pointer's head
0x7f1fecacbb50
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575100 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575120 - 0x7f1fed575140
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575120
Return data from 0x7f1fed575130
To               0x7f1fed575140
************
32
0x7f1fed575130
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575120 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575140 - 0x7f1fed575160
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575140
Return data from 0x7f1fed575150
To               0x7f1fed575160
************
32
0x7f1fed575150
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575140 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575160 - 0x7f1fed575180
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575160
Return data from 0x7f1fed575170
To               0x7f1fed575180
************
32
0x7f1fed575170
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575160 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575180 - 0x7f1fed5751a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575180
Return data from 0x7f1fed575190
To               0x7f1fed5751a0
************
32
0x7f1fed575190
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575180 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5751a0 - 0x7f1fed5751c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5751a0
Return data from 0x7f1fed5751b0
To               0x7f1fed5751c0
************
32
0x7f1fed5751b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5751a0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5751c0 - 0x7f1fed5751e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5751c0
Return data from 0x7f1fed5751d0
To               0x7f1fed5751e0
************
32
0x7f1fed5751d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5751c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5751e0 - 0x7f1fed575200
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5751e0
Return data from 0x7f1fed5751f0
To               0x7f1fed575200
************
32
0x7f1fed5751f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5751e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575200 - 0x7f1fed575220
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575200
Return data from 0x7f1fed575210
To               0x7f1fed575220
************
32
0x7f1fed575210
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575200 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575220 - 0x7f1fed575240
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575220
Return data from 0x7f1fed575230
To               0x7f1fed575240
************
32
0x7f1fed575230
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575220 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575240 - 0x7f1fed575260
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575240
Return data from 0x7f1fed575250
To               0x7f1fed575260
************
32
0x7f1fed575250
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574dd0
pointer's head
0x7f1fed574dc0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed574df0
pointer's head
0x7f1fed574de0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574dc0 - 0x7f1fed574de0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574dc0
Return data from 0x7f1fed574dd0
To               0x7f1fed574de0
************
32
0x7f1fed574dd0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed574de0 - 0x7f1fed574e00
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed574de0
Return data from 0x7f1fed574df0
To               0x7f1fed574e00
************
32
0x7f1fed574df0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575240 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575260 - 0x7f1fed575280
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575260 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575280 - 0x7f1fed5752a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575280 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed5752a0 - 0x7f1fed5752c0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5752a0
Return data from 0x7f1fed5752b0
To               0x7f1fed5752c0
************
32
0x7f1fed5752b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5752b0
pointer's head
0x7f1fed5752a0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5752a0 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed5752c0 - 0x7f1fed5752e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5752c0
Return data from 0x7f1fed5752d0
To               0x7f1fed5752e0
************
32
0x7f1fed5752d0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 3
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 3 | 0x3
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 3
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5752a0 - 0x7f1fed5752c0
Wanted size : 3 | 0x3
Got size    : 32 | 0x20
Chunk head       0x7f1fed5752a0
Return data from 0x7f1fed5752b0
To               0x7f1fed5752c0
************
32
0x7f1fed5752b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5752c0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5752e0 - 0x7f1fed575300
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5752e0
Return data from 0x7f1fed5752f0
To               0x7f1fed575300
************
32
0x7f1fed5752f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fec5877c0
ptr : 0x7f1fec5877b0
Upgrading from 1264 to 1840, changing ptr
###########INSIDE MALLOC##########
Wanted size : 1840
Page size corresponding : 4096 | 0x1000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 4096  |  0x1000
Allocated from 0x7f1fec567000
To             0x7f1fec568000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec567018 => 0x7f1fec567020

Chunk size : 1856 | 0x740 | 0b11101000000
Chunk head       0x7f1fec567020
Return data from 0x7f1fec567030
To               0x7f1fec567760
************
1856
0x7f1fec567030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fec567030
Freeing old ptr : 0x7f1fec5877c0
###########INSIDE FREE##########
pointer to free
0x7f1fec5877c0
pointer's head
0x7f1fec5877b0
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
Still used blocks, will not remove page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 17
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5752e0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575300 - 0x7f1fed575330
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed575300
Return data from 0x7f1fed575310
To               0x7f1fed575330
************
48
0x7f1fed575310
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575310
pointer's head
0x7f1fed575300
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 3
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 3 | 0x3
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 3
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575300 - 49 | 0x31
Found the end of chunk, chunk will be 0x7f1fed575330 - 0x7f1fed575350
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575330
Return data from 0x7f1fed575340
To               0x7f1fed575350
************
32
0x7f1fed575340
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575300 - 0x7f1fed575330
Wanted size : 10 | 0xa
Got size    : 48 | 0x30
Chunk head       0x7f1fed575300
Return data from 0x7f1fed575310
To               0x7f1fed575330
************
48
0x7f1fed575310
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575270
pointer's head
0x7f1fed575260
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575290
pointer's head
0x7f1fed575280
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575260 - 0x7f1fed575280
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed575260
Return data from 0x7f1fed575270
To               0x7f1fed575280
************
32
0x7f1fed575270
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575280 - 0x7f1fed5752a0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed575280
Return data from 0x7f1fed575290
To               0x7f1fed5752a0
************
32
0x7f1fed575290
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575330 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575350 - 0x7f1fed575370
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575350
Return data from 0x7f1fed575360
To               0x7f1fed575370
************
32
0x7f1fed575360
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575350 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575370 - 0x7f1fed575390
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575370
Return data from 0x7f1fed575380
To               0x7f1fed575390
************
32
0x7f1fed575380
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575360
pointer's head
0x7f1fed575350
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575350 - 0x7f1fed575370
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed575350
Return data from 0x7f1fed575360
To               0x7f1fed575370
************
32
0x7f1fed575360
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575380
pointer's head
0x7f1fed575370
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575370 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed575390 - 0x7f1fed5753b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575390
Return data from 0x7f1fed5753a0
To               0x7f1fed5753b0
************
32
0x7f1fed5753a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575360
pointer's head
0x7f1fed575350
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575350 - 0x7f1fed575370
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575350
Return data from 0x7f1fed575360
To               0x7f1fed575370
************
32
0x7f1fed575360
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753a0
pointer's head
0x7f1fed575390
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575370 - 0x7f1fed575390
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed575370
Return data from 0x7f1fed575380
To               0x7f1fed575390
************
32
0x7f1fed575380
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575390 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed5753b0 - 0x7f1fed5753d0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5753b0
Return data from 0x7f1fed5753c0
To               0x7f1fed5753d0
************
32
0x7f1fed5753c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575360
pointer's head
0x7f1fed575350
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575380
pointer's head
0x7f1fed575370
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 14
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575350 - 0x7f1fed575370
Wanted size : 14 | 0xe
Got size    : 32 | 0x20
Chunk head       0x7f1fed575350
Return data from 0x7f1fed575360
To               0x7f1fed575370
************
32
0x7f1fed575360
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 14
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575370 - 0x7f1fed575390
Wanted size : 14 | 0xe
Got size    : 32 | 0x20
Chunk head       0x7f1fed575370
Return data from 0x7f1fed575380
To               0x7f1fed575390
************
32
0x7f1fed575380
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575390 - 0x7f1fed5753b0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575390
Return data from 0x7f1fed5753a0
To               0x7f1fed5753b0
************
32
0x7f1fed5753a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5753b0 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed5753d0 - 0x7f1fed5753f0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5753d0
Return data from 0x7f1fed5753e0
To               0x7f1fed5753f0
************
32
0x7f1fed5753e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753a0
pointer's head
0x7f1fed575390
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575390 - 0x7f1fed5753b0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed575390
Return data from 0x7f1fed5753a0
To               0x7f1fed5753b0
************
32
0x7f1fed5753a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753e0
pointer's head
0x7f1fed5753d0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5753d0 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed5753f0 - 0x7f1fed575410
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed5753f0
Return data from 0x7f1fed575400
To               0x7f1fed575410
************
32
0x7f1fed575400
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753a0
pointer's head
0x7f1fed575390
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575390 - 0x7f1fed5753b0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed575390
Return data from 0x7f1fed5753a0
To               0x7f1fed5753b0
************
32
0x7f1fed5753a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575400
pointer's head
0x7f1fed5753f0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5753d0 - 0x7f1fed5753f0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5753d0
Return data from 0x7f1fed5753e0
To               0x7f1fed5753f0
************
32
0x7f1fed5753e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753a0
pointer's head
0x7f1fed575390
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575390 - 0x7f1fed5753b0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed575390
Return data from 0x7f1fed5753a0
To               0x7f1fed5753b0
************
32
0x7f1fed5753a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753e0
pointer's head
0x7f1fed5753d0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5753d0 - 0x7f1fed5753f0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed5753d0
Return data from 0x7f1fed5753e0
To               0x7f1fed5753f0
************
32
0x7f1fed5753e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753a0
pointer's head
0x7f1fed575390
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575390 - 0x7f1fed5753b0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575390
Return data from 0x7f1fed5753a0
To               0x7f1fed5753b0
************
32
0x7f1fed5753a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753e0
pointer's head
0x7f1fed5753d0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5753d0 - 0x7f1fed5753f0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed5753d0
Return data from 0x7f1fed5753e0
To               0x7f1fed5753f0
************
32
0x7f1fed5753e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5753f0 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed575410 - 0x7f1fed575430
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575410
Return data from 0x7f1fed575420
To               0x7f1fed575430
************
32
0x7f1fed575420
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753a0
pointer's head
0x7f1fed575390
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575390 - 0x7f1fed5753b0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575390
Return data from 0x7f1fed5753a0
To               0x7f1fed5753b0
************
32
0x7f1fed5753a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753e0
pointer's head
0x7f1fed5753d0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5753d0 - 0x7f1fed5753f0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed5753d0
Return data from 0x7f1fed5753e0
To               0x7f1fed5753f0
************
32
0x7f1fed5753e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5753f0 - 0x7f1fed575410
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed5753f0
Return data from 0x7f1fed575400
To               0x7f1fed575410
************
32
0x7f1fed575400
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753a0
pointer's head
0x7f1fed575390
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753e0
pointer's head
0x7f1fed5753d0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575390 - 0x7f1fed5753b0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed575390
Return data from 0x7f1fed5753a0
To               0x7f1fed5753b0
************
32
0x7f1fed5753a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753a0
pointer's head
0x7f1fed575390
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575390 - 0x7f1fed5753b0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed575390
Return data from 0x7f1fed5753a0
To               0x7f1fed5753b0
************
32
0x7f1fed5753a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5753d0 - 0x7f1fed5753f0
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed5753d0
Return data from 0x7f1fed5753e0
To               0x7f1fed5753f0
************
32
0x7f1fed5753e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753a0
pointer's head
0x7f1fed575390
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575390 - 0x7f1fed5753b0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed575390
Return data from 0x7f1fed5753a0
To               0x7f1fed5753b0
************
32
0x7f1fed5753a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753e0
pointer's head
0x7f1fed5753d0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5753d0 - 0x7f1fed5753f0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5753d0
Return data from 0x7f1fed5753e0
To               0x7f1fed5753f0
************
32
0x7f1fed5753e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753a0
pointer's head
0x7f1fed575390
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753e0
pointer's head
0x7f1fed5753d0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec565000
To             0x7f1fec567000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec565018 => 0x7f1fec565020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fec565020
Return data from 0x7f1fec565030
To               0x7f1fec566030
************
4112
0x7f1fec565030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec563000
To             0x7f1fec565000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec563018 => 0x7f1fec563020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fec563020
Return data from 0x7f1fec563030
To               0x7f1fec564030
************
4112
0x7f1fec563030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 21
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575410 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575430 - 0x7f1fed575460
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed575430
Return data from 0x7f1fed575440
To               0x7f1fed575460
************
48
0x7f1fed575440
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fec563030
pointer's head
0x7f1fec563020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fec565030
pointer's head
0x7f1fec565020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec565000
To             0x7f1fec567000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec565018 => 0x7f1fec565020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fec565020
Return data from 0x7f1fec565030
To               0x7f1fec566030
************
4112
0x7f1fec565030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 21
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575430 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed575460 - 0x7f1fed575490
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed575460
Return data from 0x7f1fed575470
To               0x7f1fed575490
************
48
0x7f1fed575470
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fec565030
pointer's head
0x7f1fec565020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575470
pointer's head
0x7f1fed575460
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 472
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecacb7e0 - 0x7f1fecacba20
Wanted size : 472 | 0x1d8
Got size    : 576 | 0x240
Chunk head       0x7f1fecacb7e0
Return data from 0x7f1fecacb7f0
To               0x7f1fecacba20
************
576
0x7f1fecacb7f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
No ptr, just allocating
###########INSIDE MALLOC##########
Wanted size : 160
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575460 - 49 | 0x31
Found the end of chunk, chunk will be 0x7f1fed575490 - 0x7f1fed575540
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 176 | 0xb0 | 0b10110000
Chunk head       0x7f1fed575490
Return data from 0x7f1fed5754a0
To               0x7f1fed575540
************
176
0x7f1fed5754a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 656
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecacbb50 - 865 | 0x361
Found the end of chunk, chunk will be 0x7f1fecacbeb0 - 0x7f1fecacc150
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 672 | 0x2a0 | 0b1010100000
Chunk head       0x7f1fecacbeb0
Return data from 0x7f1fecacbec0
To               0x7f1fecacc150
************
672
0x7f1fecacbec0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 376
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecacbb50 - 0x7f1fecacbeb0
Wanted size : 376 | 0x178
Got size    : 864 | 0x360
Chunk head       0x7f1fecacbb50
Return data from 0x7f1fecacbb60
To               0x7f1fecacbeb0
************
864
0x7f1fecacbb60
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 21
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575460 - 0x7f1fed575490
Wanted size : 21 | 0x15
Got size    : 48 | 0x30
Chunk head       0x7f1fed575460
Return data from 0x7f1fed575470
To               0x7f1fed575490
************
48
0x7f1fed575470
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
No ptr, just allocating
###########INSIDE MALLOC##########
Wanted size : 250
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecacba20 - 0x7f1fecacbb50
Wanted size : 250 | 0xfa
Got size    : 304 | 0x130
Chunk head       0x7f1fecacba20
Return data from 0x7f1fecacba30
To               0x7f1fecacbb50
************
304
0x7f1fecacba30
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec565000
To             0x7f1fec567000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec565018 => 0x7f1fec565020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fec565020
Return data from 0x7f1fec565030
To               0x7f1fec566030
************
4112
0x7f1fec565030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 76
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575490 - 176 | 0xb0
Found the end of chunk, chunk will be 0x7f1fed575540 - 0x7f1fed5755a0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 96 | 0x60 | 0b1100000
Chunk head       0x7f1fed575540
Return data from 0x7f1fed575550
To               0x7f1fed5755a0
************
96
0x7f1fed575550
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575550
pointer's head
0x7f1fed575540
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 48
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575540 - 97 | 0x61
Found the end of chunk, chunk will be 0x7f1fed5755a0 - 0x7f1fed5755e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed5755a0
Return data from 0x7f1fed5755b0
To               0x7f1fed5755e0
************
64
0x7f1fed5755b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5755b0
pointer's head
0x7f1fed5755a0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575390 - 0x7f1fed5753b0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed575390
Return data from 0x7f1fed5753a0
To               0x7f1fed5753b0
************
32
0x7f1fed5753a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
No ptr, just allocating
###########INSIDE MALLOC##########
Wanted size : 100
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5755a0 - 65 | 0x41
Found the end of chunk, chunk will be 0x7f1fed5755e0 - 0x7f1fed575660
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 128 | 0x80 | 0b10000000
Chunk head       0x7f1fed5755e0
Return data from 0x7f1fed5755f0
To               0x7f1fed575660
************
128
0x7f1fed5755f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 48
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575540 - 0x7f1fed5755a0
Wanted size : 48 | 0x30
Got size    : 96 | 0x60
Chunk head       0x7f1fed575540
Return data from 0x7f1fed575550
To               0x7f1fed5755a0
************
96
0x7f1fed575550
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575550
pointer's head
0x7f1fed575540
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 55
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575540 - 0x7f1fed5755a0
Wanted size : 55 | 0x37
Got size    : 96 | 0x60
Chunk head       0x7f1fed575540
Return data from 0x7f1fed575550
To               0x7f1fed5755a0
************
96
0x7f1fed575550
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5755f0
pointer's head
0x7f1fed5755e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 54
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5755e0 - 129 | 0x81
Found the end of chunk, chunk will be 0x7f1fed575660 - 0x7f1fed5756b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 80 | 0x50 | 0b1010000
Chunk head       0x7f1fed575660
Return data from 0x7f1fed575670
To               0x7f1fed5756b0
************
80
0x7f1fed575670
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 24
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5755a0 - 0x7f1fed5755e0
Wanted size : 24 | 0x18
Got size    : 64 | 0x40
Chunk head       0x7f1fed5755a0
Return data from 0x7f1fed5755b0
To               0x7f1fed5755e0
************
64
0x7f1fed5755b0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 54
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5755e0 - 0x7f1fed575660
Wanted size : 54 | 0x36
Got size    : 128 | 0x80
Chunk head       0x7f1fed5755e0
Return data from 0x7f1fed5755f0
To               0x7f1fed575660
************
128
0x7f1fed5755f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 54
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575660 - 80 | 0x50
Found the end of chunk, chunk will be 0x7f1fed5756b0 - 0x7f1fed575700
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 80 | 0x50 | 0b1010000
Chunk head       0x7f1fed5756b0
Return data from 0x7f1fed5756c0
To               0x7f1fed575700
************
80
0x7f1fed5756c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5756c0
pointer's head
0x7f1fed5756b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
[?25l[J###########INSIDE FREE##########
pointer to free
0x7f1fed575550
pointer's head
0x7f1fed575540
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 48
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575540 - 0x7f1fed5755a0
Wanted size : 48 | 0x30
Got size    : 96 | 0x60
Chunk head       0x7f1fed575540
Return data from 0x7f1fed575550
To               0x7f1fed5755a0
************
96
0x7f1fed575550
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575550
pointer's head
0x7f1fed575540
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
NULL
free had nothing to do
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 30
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575540 - 0x7f1fed5755a0
Wanted size : 30 | 0x1e
Got size    : 96 | 0x60
Chunk head       0x7f1fed575540
Return data from 0x7f1fed575550
To               0x7f1fed5755a0
************
96
0x7f1fed575550
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575670
pointer's head
0x7f1fed575660
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5753d0 - 0x7f1fed5753f0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5753d0
Return data from 0x7f1fed5753e0
To               0x7f1fed5753f0
************
32
0x7f1fed5753e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 24
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575660 - 0x7f1fed5756b0
Wanted size : 24 | 0x18
Got size    : 80 | 0x50
Chunk head       0x7f1fed575660
Return data from 0x7f1fed575670
To               0x7f1fed5756b0
************
80
0x7f1fed575670
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5756b0 - 81 | 0x51
Found the end of chunk, chunk will be 0x7f1fed575700 - 0x7f1fed575720
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575700
Return data from 0x7f1fed575710
To               0x7f1fed575720
************
32
0x7f1fed575710
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 3
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5756b0 - 0x7f1fed575700
Wanted size : 3 | 0x3
Got size    : 80 | 0x50
Chunk head       0x7f1fed5756b0
Return data from 0x7f1fed5756c0
To               0x7f1fed575700
************
80
0x7f1fed5756c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5756c0
pointer's head
0x7f1fed5756b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5756b0 - 0x7f1fed575700
Wanted size : 11 | 0xb
Got size    : 80 | 0x50
Chunk head       0x7f1fed5756b0
Return data from 0x7f1fed5756c0
To               0x7f1fed575700
************
80
0x7f1fed5756c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5756c0
pointer's head
0x7f1fed5756b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
[J###########INSIDE FREE##########
pointer to free
0x7f1fed575550
pointer's head
0x7f1fed575540
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 21
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575540 - 0x7f1fed5755a0
Wanted size : 21 | 0x15
Got size    : 96 | 0x60
Chunk head       0x7f1fed575540
Return data from 0x7f1fed575550
To               0x7f1fed5755a0
************
96
0x7f1fed575550
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5753e0
pointer's head
0x7f1fed5753d0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5753d0 - 0x7f1fed5753f0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5753d0
Return data from 0x7f1fed5753e0
To               0x7f1fed5753f0
************
32
0x7f1fed5753e0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 24
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5756b0 - 0x7f1fed575700
Wanted size : 24 | 0x18
Got size    : 80 | 0x50
Chunk head       0x7f1fed5756b0
Return data from 0x7f1fed5756c0
To               0x7f1fed575700
************
80
0x7f1fed5756c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575700 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575720 - 0x7f1fed575740
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575720
Return data from 0x7f1fed575730
To               0x7f1fed575740
************
32
0x7f1fed575730
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 3
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575720 - 32 | 0x20
Found the end of chunk, chunk will be 0x7f1fed575740 - 0x7f1fed575760
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575740
Return data from 0x7f1fed575750
To               0x7f1fed575760
************
32
0x7f1fed575750
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575750
pointer's head
0x7f1fed575740
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575740 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed575760 - 0x7f1fed575780
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 32 | 0x20 | 0b100000
Chunk head       0x7f1fed575760
Return data from 0x7f1fed575770
To               0x7f1fed575780
************
32
0x7f1fed575770
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575770
pointer's head
0x7f1fed575760
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
[J###########INSIDE FREE##########
pointer to free
0x7f1fec565030
pointer's head
0x7f1fec565020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecacb7f0
pointer's head
0x7f1fecacb7e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecacba30
pointer's head
0x7f1fecacba20
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575470
pointer's head
0x7f1fed575460
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec565000
To             0x7f1fec567000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec565018 => 0x7f1fec565020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fec565020
Return data from 0x7f1fec565030
To               0x7f1fec566030
************
4112
0x7f1fec565030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec563000
To             0x7f1fec565000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec563018 => 0x7f1fec563020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fec563020
Return data from 0x7f1fec563030
To               0x7f1fec564030
************
4112
0x7f1fec563030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 29
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575460 - 0x7f1fed575490
Wanted size : 29 | 0x1d
Got size    : 48 | 0x30
Chunk head       0x7f1fed575460
Return data from 0x7f1fed575470
To               0x7f1fed575490
************
48
0x7f1fed575470
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fec563030
pointer's head
0x7f1fec563020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fec565030
pointer's head
0x7f1fec565020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec565000
To             0x7f1fec567000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec565018 => 0x7f1fec565020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fec565020
Return data from 0x7f1fec565030
To               0x7f1fec566030
************
4112
0x7f1fec565030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 29
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575760 - 33 | 0x21
Found the end of chunk, chunk will be 0x7f1fed575780 - 0x7f1fed5757b0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed575780
Return data from 0x7f1fed575790
To               0x7f1fed5757b0
************
48
0x7f1fed575790
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fec565030
pointer's head
0x7f1fec565020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575790
pointer's head
0x7f1fed575780
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 472
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fecacb7e0 - 0x7f1fecacba20
Wanted size : 472 | 0x1d8
Got size    : 576 | 0x240
Chunk head       0x7f1fecacb7e0
Return data from 0x7f1fecacb7f0
To               0x7f1fecacba20
************
576
0x7f1fecacb7f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575740 - 0x7f1fed575760
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed575740
Return data from 0x7f1fed575750
To               0x7f1fed575760
************
32
0x7f1fed575750
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 5
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575760 - 0x7f1fed575780
Wanted size : 5 | 0x5
Got size    : 32 | 0x20
Chunk head       0x7f1fed575760
Return data from 0x7f1fed575770
To               0x7f1fed575780
************
32
0x7f1fed575770
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed571a00
pointer's head
0x7f1fed5719f0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed575750
pointer's head
0x7f1fed575740
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5719f0 - 0x7f1fed571a10
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed5719f0
Return data from 0x7f1fed571a00
To               0x7f1fed571a10
************
32
0x7f1fed571a00
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720a0
pointer's head
0x7f1fed572090
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572090 - 0x7f1fed5720b0
Wanted size : 4 | 0x4
Got size    : 32 | 0x20
Chunk head       0x7f1fed572090
Return data from 0x7f1fed5720a0
To               0x7f1fed5720b0
************
32
0x7f1fed5720a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 18
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575780 - 49 | 0x31
Found the end of chunk, chunk will be 0x7f1fed5757b0 - 0x7f1fed5757e0
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5757b0
Return data from 0x7f1fed5757c0
To               0x7f1fed5757e0
************
48
0x7f1fed5757c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5722a0
pointer's head
0x7f1fed572290
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 18
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed575780 - 0x7f1fed5757b0
Wanted size : 18 | 0x12
Got size    : 48 | 0x30
Chunk head       0x7f1fed575780
Return data from 0x7f1fed575790
To               0x7f1fed5757b0
************
48
0x7f1fed575790
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5722c0
pointer's head
0x7f1fed5722b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed572290 - 0x7f1fed5722b0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed572290
Return data from 0x7f1fed5722a0
To               0x7f1fed5722b0
************
32
0x7f1fed5722a0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5727a0
pointer's head
0x7f1fed572790
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 20
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5757b0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed5757e0 - 0x7f1fed575810
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed5757e0
Return data from 0x7f1fed5757f0
To               0x7f1fed575810
************
48
0x7f1fed5757f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6000
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec565000
To             0x7f1fec567000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec565018 => 0x7f1fec565020

Chunk size : 6016 | 0x1780 | 0b1011110000000
Chunk head       0x7f1fec565020
Return data from 0x7f1fec565030
To               0x7f1fec5667a0
************
6016
0x7f1fec565030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 1280
Page size corresponding : 4096 | 0x1000
page : 0x7f1fec567000 - 0x7f1fec568000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fec567020 - 1856 | 0x740
Found the end of chunk, chunk will be 0x7f1fec567760 - 0x7f1fec567c70
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 1296 | 0x510 | 0b10100010000
Chunk head       0x7f1fec567760
Return data from 0x7f1fec567770
To               0x7f1fec567c70
************
1296
0x7f1fec567770
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 496
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecacbeb0 - 672 | 0x2a0
Found the end of chunk, chunk will be 0x7f1fecacc150 - 0x7f1fecacc350
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 512 | 0x200 | 0b1000000000
Chunk head       0x7f1fecacc150
Return data from 0x7f1fecacc160
To               0x7f1fecacc350
************
512
0x7f1fecacc160
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fecacc160
pointer's head
0x7f1fecacc150
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 20
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed5757e0 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed575810 - 0x7f1fed575840
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 48 | 0x30 | 0b110000
Chunk head       0x7f1fed575810
Return data from 0x7f1fed575820
To               0x7f1fed575840
************
48
0x7f1fed575820
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fec565030
pointer's head
0x7f1fec565020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5757f0
pointer's head
0x7f1fed5757e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5729f0
pointer's head
0x7f1fed5729e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed565030
pointer's head
0x7f1fed565020
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 17
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5729e0 - 0x7f1fed572a10
Wanted size : 17 | 0x11
Got size    : 48 | 0x30
Chunk head       0x7f1fed5729e0
Return data from 0x7f1fed5729f0
To               0x7f1fed572a10
************
48
0x7f1fed5729f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5729f0
pointer's head
0x7f1fed5729e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 7
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 7 | 0x7
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 6
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 6 | 0x6
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 9
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 9 | 0x9
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 10
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 10 | 0xa
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 8
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 8 | 0x8
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 11
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 11 | 0xb
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 12
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 12 | 0xc
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 13
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 13 | 0xd
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 15
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5720b0 - 0x7f1fed5720d0
Wanted size : 15 | 0xf
Got size    : 32 | 0x20
Chunk head       0x7f1fed5720b0
Return data from 0x7f1fed5720c0
To               0x7f1fed5720d0
************
32
0x7f1fed5720c0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5720c0
pointer's head
0x7f1fed5720b0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 17
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5729e0 - 0x7f1fed572a10
Wanted size : 17 | 0x11
Got size    : 48 | 0x30
Chunk head       0x7f1fed5729e0
Return data from 0x7f1fed5729f0
To               0x7f1fed572a10
************
48
0x7f1fed5729f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5729f0
pointer's head
0x7f1fed5729e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fec58b030
ptr : 0x7f1fec58b020
Upgrading from 14800 to 15552, changing ptr
###########INSIDE MALLOC##########
Wanted size : 15552
Page size corresponding : 16384 | 0x4000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 16384  |  0x4000
Allocated from 0x7f1fec563000
To             0x7f1fec567000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec563018 => 0x7f1fec563020

Chunk size : 15568 | 0x3cd0 | 0b11110011010000
Chunk head       0x7f1fec563020
Return data from 0x7f1fec563030
To               0x7f1fec566cf0
************
15568
0x7f1fec563030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
New ptr : 0x7f1fec563030
Freeing old ptr : 0x7f1fec58b030
###########INSIDE FREE##########
pointer to free
0x7f1fec58b030
pointer's head
0x7f1fec58b020
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 4096
Page size corresponding : 8192 | 0x2000
Did not find any available page, adding one
t_page	*add_page(size_t size);
Allocating : 8192  |  0x2000
Allocated from 0x7f1fec58d000
To             0x7f1fec58f000
void	*add_chunk(t_page *page, size_t size);
Did not find any chunk, creating one
t_chunk	*create_chunk(void *addr, size_t size);
not aligned : 0x7f1fec58d018 => 0x7f1fec58d020

Chunk size : 4112 | 0x1010 | 0b1000000010000
Chunk head       0x7f1fec58d020
Return data from 0x7f1fec58d030
To               0x7f1fec58e030
************
4112
0x7f1fec58d030
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 29
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5729e0 - 0x7f1fed572a10
Wanted size : 29 | 0x1d
Got size    : 48 | 0x30
Chunk head       0x7f1fed5729e0
Return data from 0x7f1fed5729f0
To               0x7f1fed572a10
************
48
0x7f1fed5729f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fec58d030
pointer's head
0x7f1fec58d020
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Still used blocks, will not remove page
Changing chunk status to freed
No more chunk, removing whole page
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE REALLOC##########
p   : 0x7f1fecac9b70
ptr : 0x7f1fecac9b60
Downgrading, no need to change ptr
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 37
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fed575810 - 48 | 0x30
Found the end of chunk, chunk will be 0x7f1fed575840 - 0x7f1fed575880
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Chunk size : 64 | 0x40 | 0b1000000
Chunk head       0x7f1fed575840
Return data from 0x7f1fed575850
To               0x7f1fed575880
************
64
0x7f1fed575850
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 24
Size will be TINY : 256
Page size corresponding : 28672 | 0x7000
page : 0x7f1fed571000 - 0x7f1fed578000
void	*add_chunk(t_page *page, size_t size);
Found a freed chunk that can be reused at 0x7f1fed5757e0 - 0x7f1fed575810
Wanted size : 24 | 0x18
Got size    : 48 | 0x30
Chunk head       0x7f1fed5757e0
Return data from 0x7f1fed5757f0
To               0x7f1fed575810
************
48
0x7f1fed5757f0
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE FREE##########
pointer to free
0x7f1fed5729f0
pointer's head
0x7f1fed5729e0
Still used blocks, will not remove page
Changing chunk status to freed
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###########INSIDE MALLOC##########
Wanted size : 656
Size will be SMALL : 1024
Page size corresponding : 106496 | 0x1a000
page : 0x7f1fecac9000 - 0x7f1fecae3000
void	*add_chunk(t_page *page, size_t size);
tmp : 0x7f1fecac9d90 - 18446744073396508752 | 0x7f1fed575850
Found the end of chunk, chunk will be 0xfe3fda03f5e0 - 0xfe3fda03f880
t_chunk	*create_chunk(void *addr, size_t size);
16 bits aligned

Vim: Double signal, exiting
